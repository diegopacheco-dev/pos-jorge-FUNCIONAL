{"version":3,"sources":["context/auth/authContext.js","firebase/firebase.js","context/auth/authState.js","components/menuComponent/MenuComponent.js","services/pedidosService.js","context/pedidos/pedidosContext.js","context/pedidos/pedidosState.js","context/pos/posContext.js","context/pos/posState.js","assets/images/frapuchino.png","context/AdministrarProductos/administrarProductosContext.js","services/platosService.js","services/categoriaService.js","components/modalEditarProducto/ModalEditarProducto.js","components/platoAdministrar/PlatoAdministrar.js","components/modalCrearPlato/ModalCrearPlato.js","components/modalAdministrarCategoria/ModalAdministrarCategoria.js","components/administrarProductos/AdministrarProductos.js","components/administrarSeguridad/AdministrarSeguridad.js","components/settingsMenu/SettingsMenu.js","context/AdministrarProductos/administrarProductosState.js","screens/AdministrarScreen.js","components/datoEstadistico/DatoEstadistico.js","components/estadisticasClientes/EstadisticasClientes.js","components/estadisticasComponent/EstadisticasComponent.js","services/clientesService.js","components/modalEditarCliente/ModalEditarCliente.js","components/modalListaPedidosByCliente/ModalListaPedidosByCliente.js","components/deliveryStatus/DeliveryStatus.js","components/modalDetallePedido/ModalDetallePedido.js","components/modalDetallePedidoDesdeCliente/ModalDetallePedidoDesdeCliente.js","components/listaDeClientes/ListaDeClientes.js","components/mostOrderedItem/MostOrderedItem.js","components/mostCommonComponent/MostCommonComponent.js","screens/ClientesScreen.js","components/reportePedidosComponent/ReportePedidosComponent.js","screens/PedidosScreen.js","components/productoComponent/ProductoComponent.js","components/productosComponent/ProductosComponent.js","components/itemCarrito/ItemCarrito.js","components/modalCrearCliente/ModalCrearCliente.js","components/clientesSearch/ClientesSearch.js","components/perfilClienteCarrito/PerfilClienteCarrito.js","components/buttonAgregarCliente/ButtonAgregarCliente.js","components/carritoCliente/CarritoCliente.js","components/carritoComponent/CarritoComponent.js","components/categoriaComponent/CategoriaComponent.js","components/categoriasComponent/CategoriasComponent.js","components/confirmarOrdenComponent/ConfirmarOrdenComponent.js","screens/PuntoDeVentaScreen.js","modules/Admin/AdminRouter.js","Private.js","screens/LoginScreen.js","App.js","index.js"],"names":["AuthContext","createContext","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","AuthState","children","history","useHistory","useState","usu_nom","usu_email","usu_id","isAuthenticated","cargando","setAuth","useEffect","console","log","authFirebase","onAuthStateChanged","objUser","displayName","email","uid","Provider","value","iniciarSesionContext","localStorage","setItem","cerrarSesion","Swal","fire","title","text","icon","showCancelButton","then","rpta","isConfirmed","signOut","push","MenuComponent","useContext","className","activeClassName","to","onClick","class","postPedidos","objPedido","a","collection","add","peticion","id","getPedidos","get","docs","data","map","doc","getPedidoById","idPedido","exists","actualizarPedido","update","PedidosContext","PedidosState","pedidos","pedidosState","setPedidosState","PosContext","PosState","moment","locale","posStateVacio","categoria_global","carrito","estado","cliente_global","monto_total","monto_pagado","puntoDeVentaState","setPuntoDeVentaState","modalCrearCliente","setModalCrearCliente","establecerCategoriaGlobal","objCategoria","prevState","establecerClienteGlobal","objCliente","eliminarClienteGlobal","establecerEstadoDelPedido","establecerMontoPagado","monto","agregarProductoAlCarrito","objProduct","platoRepetido","find","plato","plato_id","cantidad","montoTotal","reduce","contador","plato_precio","plato_nombre","nombre","categoria","precio","imagen","crearPedido","pedido","cliente","platos","monto_a_pagar","fecha","format","timer","eliminarProductoDelCarrito","idProducto","filter","item","editarCantidadDelProducto","actualizarMontoTotal","montoActualizado","AdministrarProductosContext","getPlatos","getPlatosByCategoria","idCategoria","where","alert","postPlato","objPlato","actualizarPlato","subirImagenPlato","imgFile","ref","name","put","child","getDownloadURL","url","getCategorias","getCategoriaById","postCategoria","ModalEditarProducto","categorias","modalEditarCliente","setModalEditarCliente","formPlatoOriginal","categoria_id","stock","setTraerPlatosActualizados","setActualizarPlatos","formPlatoEditado","setFormPlatoEditado","mensajeError","setMensajeError","spinnerLoading","setSpinnerLoading","imgData","setImgData","inputImg","useRef","handleChange","e","target","editarPlatoStorage","preventDefault","trim","length","current","files","categoria_nombre","Modal","show","onHide","backdrop","keyboard","centered","Header","Title","Body","onSubmit","role","htmlFor","required","type","onChange","aria-label","disabled","selected","for","accept","reader","FileReader","addEventListener","result","readAsDataURL","style","width","src","alt","PlatoAdministrar","ModalCrearPlato","modalCrear","setModalCrear","categoriaSeleccionada","formPlatoVacio","formPlatoCrear","setformPlatoCrear","min","ModalAdministrarCategoria","modalCategoria","setModalCategoria","setActualizarCategorias","inputCrearCategoria","setInputCrearCategoria","background","border","outline","Footer","placeholder","error","AdministrarProductos","setPlatosState","cargandoCategorias","cargandoPlatos","setCategoriaSeleccionada","AdministrarSeguridad","SettingsMenu","AdministrarProductosState","actualizarPlatos","actualizarCategorias","categoriasState","setCategoriasState","catch","platosState","crearPlato","on","snapshot","crearCategoria","AdministrarScreen","path","component","DatoEstadistico","number","caption","color","EstadisticasClientes","numClientes","EstadisticasComponent","ventasTotales","montoVendido","montoPorCobrar","getClientes","getClienteById","idCliente","updateCliente","postCliente","ModalEditarCliente","activarModalEditarCliente","setActivarModalEditarCliente","setActualizadorClientes","formVacio","apellido","celular","setCliente","setCargando","formCliente","setFormCliente","activarBtnEditar","setActivarBtnEditar","actualizadorCliente","setActualizadorCliente","size","validarFormulario","undefined","ModalListaPedidosByCliente","activarModalVerPedidos","setActivarModalVerPedidos","setIdPedidoDetalle","setActivarModalDetallePedido","setPedidos","cargandoCliente","setCargandoCliente","cargandoPedidos","setCargandoPedidos","filtrarPedidos","dataTable","columns","label","field","rows","cantidad_platos","total","entrega","ver_detalle","cantidadPlatos","actual","filas","replace","c","toUpperCase","fontWeight","searching","sortable","info","paging","DeliveryStatus","setActualizarEstePedido","setActualizarPedidos","setCargandoActualizarPedido","ModalDetallePedido","activarModalDetallePedido","idPedidoDetalle","setPedido","cargandoActualizarPedido","actualizarEstePedido","position","ModalDetallePedidoDesdeCliente","ListaDeClientes","clientes","actualizarPedidos","idClienteEditar","setIdClienteEditar","idClientePedidos","setIdClientePedidos","pedidosXCliente","numero_pedidos","pago","editar","deudaCliente","pedidosCliente","deudaPorCliente","setActualizarContenedor","MostOrderedItem","cantidad_vendida","MostCommonComponent","setPlatos","platosYCantidades","forEach","hasOwnProperty","listaPlatosVendidos","sort","b","platosMasVendidos","ClientesScreen","setClientes","actualizadorClientes","ReportePedidosComponent","acciones","pedidosOrdenados","isAfter","hover","maxHeight","PedidosScreen","ProductoComponent","producto","accionName","accionFunction","ProductosComponent","productos","setProductos","err","prod","ItemCarrito","ModalCrearCliente","activarBtnCrearCliente","setActivarBtnCrearCliente","ClientesSearch","searchWord","setSearchWord","sugerencias","setSugerencias","regex","RegExp","test","i","setClienteGlobal","PerfilClienteCarrito","deseleccionarClienteGlobal","ButtonAgregarCliente","variant","CarritoCliente","CarritoComponent","setConfirmarPedido","CategoriaComponent","CategoriasComponent","setCategorias","cat","ConfirmarOrdenComponent","montoACuenta","setMontoACuenta","PuntoDeVentaScreen","confirmarPedido","AdminRouter","marginLeft","exact","Private","Component","LoginScreen","props","password","form","setForm","signInWithEmailAndPassword","user","code","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7277032f.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth';\r\nimport 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD6sC0kkQXKvV9kfLDe3H_CUKTgjMB6zBo\",\r\n  authDomain: \"punto-de-venta-jorge.firebaseapp.com\",\r\n  projectId: \"punto-de-venta-jorge\",\r\n  storageBucket: \"punto-de-venta-jorge.appspot.com\",\r\n  messagingSenderId: \"904867829310\",\r\n  appId: \"1:904867829310:web:69a18163c3203734f7e36f\",\r\n  measurementId: \"G-D97T5QV66V\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\n//  const fireb = firebase.initializeApp(firebaseConfig);\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//   export const db = fireb.firestore();\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\nexport const storage = firebase.storage();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport { auth as authFirebase } from \"../../firebase/firebase\";\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthState = ({ children }) => {\r\n\r\n    const history = useHistory();\r\n\r\n  const [auth, setAuth] = useState({\r\n    usu_nom: null,\r\n    usu_email: null,\r\n    usu_id: null,\r\n    isAuthenticated: null,\r\n    cargando: true,\r\n  });\r\n\r\n  const iniciarSesionContext = (objUser) => {\r\n    // Gudarmos el token del usuario actual en el localstorage\r\n    localStorage.setItem(\"token\", objUser.uid);\r\n\r\n    //Seteamos el usuario en la variable de estado\r\n    setAuth({\r\n      usu_nom: objUser.displayName,\r\n      usu_email: objUser.email,\r\n      usu_id: objUser.uid,\r\n      isAuthenticated: true,\r\n      cargando: false,\r\n    });\r\n  };\r\n\r\n  const iniciarSesionConFirebaseState = () => {\r\n      console.log(\"iniciarSesionConFirebaseState\");\r\n    authFirebase.onAuthStateChanged((objUser) => {\r\n      if (objUser) {\r\n        // USUARIO LOGUEADO\r\n        console.log(\"USUARIO LOGUEADO\");\r\n        setAuth({\r\n          usu_nom: objUser.displayName,\r\n          usu_email: objUser.email,\r\n          usu_id: objUser.uid,\r\n          isAuthenticated: true,\r\n          cargando: false,\r\n        });\r\n      } else {\r\n        // USUARIO SIN LOGUEAR\r\n        console.log(\"USUARIO SIN LOGUEAR\");\r\n        setAuth({\r\n          usu_nom: null,\r\n          usu_email: null,\r\n          usu_id: null,\r\n          isAuthenticated: null,\r\n          cargando: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const cerrarSesion = () => {\r\n    // Borramos la sesión del firebase state\r\n    Swal.fire({\r\n        title: \"Cerrar Sesión\",\r\n        text: \"Desea cerrar sesión?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true\r\n    }).then(rpta => {\r\n        if (rpta.isConfirmed) {\r\n            authFirebase.signOut();\r\n            history.push(\"/login\");\r\n        }\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n      iniciarSesionConFirebaseState();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        usu_nom: auth.usu_nom,\r\n        usu_email: auth.email,\r\n        usu_id: auth.usu_id,\r\n        isAuthenticated: auth.isAuthenticated,\r\n        cargando: auth.cargando,\r\n        iniciarSesionContext,\r\n        cerrarSesion\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"boxicons\";\r\nimport \"./menuComponent.css\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nconst MenuComponent = () => {\r\n\r\n  const {cerrarSesion} = useContext(AuthContext)\r\n\r\n\r\n  return (\r\n    <nav className=\"menuComponent shadow-sm\">\r\n      <div className=\"nav__logo\">\r\n        <i className=\"bx bx-md bxs-store\"></i>\r\n      </div>\r\n      <ul className=\"nav__menu \">\r\n        <li>\r\n          <NavLink\r\n            activeClassName=\"menuComponent-active\"\r\n            className=\"menu__link\"\r\n            to={\"/vender\"}\r\n          >\r\n            <i className=\"bx-md bx bx-dish\"></i>\r\n            Vender\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName=\"menuComponent-active\"\r\n            className=\"menu__link\"\r\n            to={\"/pedidos\"}\r\n          >\r\n            <i className=\"bx-md bx bx-time-five\"></i>\r\n            Pedidos\r\n          </NavLink>\r\n        </li>\r\n\r\n        {/* <li>\r\n          <NavLink\r\n          // \r\n          activeClassName=\"menuComponent-active\" className=\"menu__link\" to={\"/pagos\"}>\r\n          <i className='bx-md bx bx-wallet' ></i>\r\n                    Pagos\r\n          </NavLink>\r\n        </li> */}\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName=\"menuComponent-active\"\r\n            className=\"menu__link\"\r\n            to={\"/clientes\"}\r\n          >\r\n            <i className=\"bx-md bx bx-group\"></i>\r\n            Clientes\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName=\"menuComponent-active\"\r\n            className=\"menu__link menu--administrar\"\r\n            to={\"/administrar\"}\r\n          >\r\n            <i className=\"bx-md bx bx-wrench\"></i>\r\n            Administrar\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n      <div className=\"btn-logout__wrapper\">\r\n      <button className=\"btn-logout\" \r\n      onClick={cerrarSesion}\r\n      >\r\n      <i class='bx bx-log-out bx-md'></i>\r\n      Salir\r\n      </button>\r\n\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MenuComponent;\r\n","import { db } from \"../firebase/firebase\";\r\n\r\nexport const postPedidos = async (objPedido) => {\r\n  const peticion = await db.collection(\"pedidos\").add(objPedido);\r\n  if (!peticion.id) {\r\n    console.log(\"ERROR AL CREAR PEDIDO\");\r\n    return;\r\n  }\r\n  return peticion;\r\n};\r\n\r\nexport const getPedidos = async () => {\r\n  \r\n    const peticion = await db.collection(\"pedidos\").get();\r\n    if (!peticion.docs) {\r\n      console.log(\"ERROR AL TRAER PEDIDOS DEL BACKEND\");\r\n      return;\r\n    }\r\n    const data = peticion.docs.map((doc) => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n    return data;\r\n  \r\n};\r\n\r\n// export const getPedidosByCliente = async(idCliente) => {\r\n//     db.collection(\"pedidos\").where(\"cliente.id\", \"==\", idCliente).get().then(querySnapshot => {\r\n//         let data = querySnapshot.docs.map(doc => ({\r\n//             id: doc.id,\r\n//             ...doc.data()\r\n//         }))\r\n//         console.log(\"Servicio pedidos: \", data);\r\n//         return data\r\n//     })\r\n// } \r\n\r\n\r\n\r\nexport const getPedidoById = async (idPedido) => {\r\n  try {\r\n    const peticion = await db.collection(\"pedidos\").doc(idPedido).get();\r\n    if (!peticion.exists) return;\r\n    return peticion.data();\r\n  } catch (error) {\r\n    console.log(\"ERROR AL TRAER EL PEDIDO POR ID\", error);\r\n  }\r\n};\r\n\r\nexport const actualizarPedido = async (id, objPedido) => {\r\n  try {\r\n    const peticion = await db.collection(\"pedidos\").doc(id).update(objPedido);\r\n    return \"pedido actualizado\";\r\n  } catch (error) {\r\n    console.log(\"ERROR AL ACTUALIZAR EL PEDIDO: \", error);\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst PedidosContext = createContext();\r\n\r\nexport default PedidosContext;","import React, { useState, useEffect } from \"react\";\r\nimport { getPedidos } from \"../../services/pedidosService\";\r\nimport PedidosContext from \"./pedidosContext\";\r\n\r\nconst PedidosState = ({ children }) => {\r\n\r\n  const [pedidosState, setPedidosState] = useState({\r\n    pedidos: [],\r\n    cargando: true,\r\n  })\r\n\r\n  let testeo = \"TESTEO\";\r\n\r\n  useEffect(() => {\r\n    getPedidos().then((data) => {\r\n      setPedidosState({\r\n        pedidos: data,\r\n        cargando: false\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <PedidosContext.Provider\r\n      value={{\r\n        pedidos: pedidosState.pedidos,\r\n        cargando: pedidosState.cargando,\r\n      }}\r\n    >\r\n      {children}\r\n    </PedidosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PedidosState;\r\n","import { createContext } from 'react';\r\n\r\nconst PosContext = createContext();\r\n\r\nexport default PosContext;","import React, { useState } from \"react\";\r\nimport { postPedidos } from \"../../services/pedidosService\";\r\nimport PosContext from \"./posContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment\";\r\n\r\nconst PosState = ({ children }) => {\r\n  moment.locale(\"es\");\r\n\r\n  console.log(\"ACTUALIZANDO POS STATE\");\r\n\r\n  let posStateVacio = {\r\n    categoria_global: null,\r\n    carrito: [],\r\n    estado: \"pendiente\",\r\n    cliente_global: null,\r\n    monto_total: 0,\r\n    monto_pagado: 0,\r\n  };\r\n\r\n  const [puntoDeVentaState, setPuntoDeVentaState] = useState(posStateVacio);\r\n\r\n  const [modalCrearCliente, setModalCrearCliente] = useState(false);\r\n\r\n  const establecerCategoriaGlobal = (objCategoria) => {\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      categoria_global: objCategoria,\r\n    }));\r\n  };\r\n\r\n  const establecerClienteGlobal = (objCliente) => {\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      cliente_global: objCliente,\r\n    }));\r\n  };\r\n\r\n  const eliminarClienteGlobal = () => {\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      cliente_global: null,\r\n    }));\r\n  }\r\n\r\n  const agregarProductoAlCarrito = (objProduct) => {\r\n    // Sacamos una copia del carrito del puntoDeVentaState\r\n    const { carrito } = puntoDeVentaState;\r\n\r\n    // Si el carrito esta vacio\r\n    // Si el carrito ya tiene un producto diferente\r\n    // Si el carrito ya tiene el mismo producto\r\n\r\n    // Verificar si el carrito ya tiene el plato que queremos agregar\r\n    let platoRepetido = carrito.find(\r\n      (plato) => plato.plato_id === objProduct.id\r\n    );\r\n\r\n    if (platoRepetido) {\r\n      // la variable platoRepetido es un puntero al plato repetido en el arreglo carrito\r\n      // por lo que al modificar esta variable se modificara el plato en el carrito\r\n      platoRepetido.cantidad++;\r\n\r\n      // Calculamos el monto total\r\n      let montoTotal = carrito.reduce((contador, plato) => {\r\n        return (contador += plato.plato_precio * plato.cantidad);\r\n      }, 0);\r\n\r\n      // Actualizamos el PuntoDeVentaState\r\n      setPuntoDeVentaState((prevState) => ({\r\n        ...prevState,\r\n        carrito: carrito,\r\n        monto_total: montoTotal,\r\n      }));\r\n    } else {\r\n      // Si el producto no esta en el carrito, lo agregamos\r\n      carrito.push({\r\n        plato_nombre: objProduct.nombre,\r\n        plato_id: objProduct.id,\r\n        categoria: objProduct.categoria,\r\n        cantidad: 1,\r\n        plato_precio: objProduct.precio,\r\n        imagen: objProduct.imagen,\r\n      });\r\n      // Calculamos el monto total\r\n      let montoTotal = carrito.reduce((contador, plato) => {\r\n        return (contador += plato.plato_precio * plato.cantidad);\r\n      }, 0);\r\n\r\n      // Seteamos el state con el arreglo carrito\r\n      setPuntoDeVentaState((prevState) => ({\r\n        ...prevState,\r\n        carrito: carrito,\r\n        monto_total: montoTotal,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const editarCantidadDelProducto = (idProducto, cantidad) => {\r\n\r\n    let { carrito } = puntoDeVentaState;\r\n\r\n    let platoActualizar = carrito.find(\r\n      (plato) => plato.plato_id === idProducto\r\n    );\r\n\r\n    platoActualizar.cantidad = cantidad;\r\n\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      carrito: carrito,\r\n    }));\r\n  };\r\n\r\n  const eliminarProductoDelCarrito = (idProducto) => {\r\n    let { carrito } = puntoDeVentaState;\r\n\r\n    carrito = carrito.filter((item) => item.plato_id !== idProducto);\r\n\r\n    let montoTotal =  carrito.reduce((contador, plato) => {\r\n      return contador += plato.plato_precio * plato.cantidad;\r\n    }, 0)\r\n\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      carrito: carrito,\r\n      monto_total: montoTotal,\r\n    }));\r\n\r\n\r\n  };\r\n\r\n  const establecerEstadoDelPedido = (estado) => {\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      estado: estado,\r\n    }));\r\n  };\r\n\r\n  const establecerMontoPagado = (monto) => {\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      monto_pagado: +monto,\r\n    }));\r\n  };\r\n\r\n  const crearPedido = () => {\r\n    let pedido = {\r\n      cliente: puntoDeVentaState.cliente_global,\r\n      platos: puntoDeVentaState.carrito,\r\n      estado: puntoDeVentaState.estado,\r\n      monto_pagado: puntoDeVentaState.monto_pagado,\r\n      monto_a_pagar: puntoDeVentaState.monto_total,\r\n      fecha: moment().format(\"DD/MM/YYYY\"),\r\n    };\r\n\r\n    Swal.fire({\r\n      title: \"Desea crear el pedido?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        postPedidos(pedido).then((rpta) => {\r\n          if (rpta.id) {\r\n            setPuntoDeVentaState({\r\n              ...posStateVacio,\r\n              categoria_global: puntoDeVentaState.categoria_global,\r\n            });\r\n            Swal.fire({\r\n              title: \"Pedido creado con éxito\",\r\n              icon: \"success\",\r\n              timer: 1000,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const actualizarMontoTotal = () => {\r\n    console.log(\"==============================\");\r\n    console.log(\"ACTUALIZANDO MONTO\");\r\n    let montoActualizado = puntoDeVentaState.carrito.reduce(\r\n      (contador, plato) => {\r\n        return (contador += plato.plato_precio * plato.cantidad);\r\n      },\r\n      0\r\n    );\r\n    console.log(\"MONTO ACTUALIZADO : \", montoActualizado);\r\n    setPuntoDeVentaState((prevState) => ({\r\n      ...prevState,\r\n      monto_total: montoActualizado,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <PosContext.Provider\r\n      value={{\r\n        puntoDeVentaState,\r\n        establecerCategoriaGlobal,\r\n        establecerClienteGlobal,\r\n        eliminarClienteGlobal,\r\n        establecerEstadoDelPedido,\r\n        establecerMontoPagado,\r\n        // setPuntoDeVentaState,\r\n        agregarProductoAlCarrito,\r\n        carrito: puntoDeVentaState.carrito,\r\n        monto_total: puntoDeVentaState.monto_total,\r\n        monto_pagado: puntoDeVentaState.monto_pagado,\r\n        cliente_global: puntoDeVentaState.cliente_global,\r\n        modalCrearCliente,\r\n        setModalCrearCliente,\r\n        estado: puntoDeVentaState.estado,\r\n        crearPedido,\r\n        eliminarProductoDelCarrito,\r\n        editarCantidadDelProducto,\r\n        categoria_global: puntoDeVentaState.categoria_global,\r\n        actualizarMontoTotal,\r\n      }}\r\n    >\r\n      {children}\r\n    </PosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PosState;\r\n","export default __webpack_public_path__ + \"static/media/frapuchino.2c946e94.png\";","import { createContext } from 'react'\r\n\r\nconst AdministrarProductosContext = createContext();\r\n\r\nexport default AdministrarProductosContext;\r\n\r\n","import { db, storage } from \"../firebase/firebase\";\r\n\r\nexport const getPlatos = async () => {\r\n  const peticion = await db.collection(\"platos\").get();\r\n  if (!peticion.docs) {\r\n    console.log(\"Error al traer los platos del backend\");\r\n  }\r\n\r\n  const data = peticion.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }));\r\n\r\n  console.log(\"PLATOS\");\r\n  console.log(data);\r\n\r\n  return data;\r\n};\r\n\r\nexport const getPlatosByCategoria = async (idCategoria) => {\r\n  console.log(\"SERVICIO CATS\");\r\n  const peticion = await db\r\n    .collection(\"platos\")\r\n    .where(\"categoria.id\", \"==\", idCategoria)\r\n    .get();\r\n  if (!peticion.docs) {\r\n    alert(\"Error al traer los platos por categoria\");\r\n    return;\r\n  }\r\n  const data = peticion.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }));\r\n\r\n  return data;\r\n};\r\n\r\nexport const postPlato = async (objPlato) => {\r\n    try{\r\n        const peticion = await db.collection(\"platos\").add(objPlato);\r\n        return peticion;\r\n    } catch(error) {\r\n        console.log(\"ERROR AL CREAR PLATO: \", error);\r\n    }\r\n};\r\n\r\nexport const actualizarPlato = async (id, objPlato) => {\r\n  try {\r\n    const peticion = await db.collection(\"platos\").doc(id).update(objPlato)\r\n    return \"plato actualizado\"\r\n  } catch(error) {\r\n    console.log(\"Error al actualizar el plato\", error);\r\n  } \r\n}\r\n\r\n\r\n\r\nexport const subirImagenPlato = async (imgFile) => {\r\n\r\n    try{\r\n    await storage.ref(`images/${imgFile.name}`).put(imgFile);\r\n    console.log(\"PASO 1\");\r\n    const url = await storage.ref(\"images\").child(imgFile.name).getDownloadURL();\r\n    console.log(\"PASO 2\", url);\r\n    return url;\r\n    } catch (error) {\r\n        console.log(\"ERROR AL SUBIR LA IMAGEN\", error);\r\n    }\r\n\r\n\r\n//   console.log(\"PASO 1\");\r\n//   // Escuchar los cambios\r\n//   uploadTask.on(\r\n//     \"state_changed\",\r\n//     // Obtener el progreso\r\n//     (snapshot) => {\r\n//       console.log(\"PASO 2\");\r\n//       let progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n//       console.log(\"Upload is \" + progress + \"% done\");\r\n//     },\r\n//     (error) => {\r\n//       console.log(\"Error al subir la imagen\");\r\n//       console.log(error);\r\n//     },\r\n//     () => {\r\n//       storage\r\n//         .ref(\"images\")\r\n//         .chil)\r\n//         .getDownloadURL()\r\n//         .then((url) => {\r\n//             console.log(\"PASO 3\");\r\n//           console.log(url);\r\n//           urlImg = url;\r\n//         });\r\n//     }\r\n//   );\r\n//   console.log(\"paso 4\");  \r\n};\r\n","import { db } from \"../firebase/firebase\";\r\n\r\nexport const getCategorias = async() => {\r\n    \r\n    const peticion = await db.collection('categorias').get();\r\n\r\n    if (!peticion.docs){\r\n        console.log(\"ERROR AL TRAER LAS CATEGORIAS\");\r\n        return;\r\n    }\r\n\r\n    const data = peticion.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }));\r\n    return data;\r\n\r\n}\r\n\r\nexport const getCategoriaById = async(idCategoria) => {\r\n    try {\r\n        const peticion = await db.collection('categorias').doc(idCategoria).get();\r\n        if (!peticion.exists) return;\r\n        return peticion.data();\r\n    } catch(error) {\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const postCategoria = async(objCategoria) => {\r\n    try{\r\n        const peticion = await db.collection(\"categorias\").add(objCategoria);\r\n            return peticion;\r\n        } catch (error) {\r\n            alert(\"Error al crear la categoria\")\r\n            console.log(\"ERROR AL CREAR LA CATEGORIA: \", error);\r\n        }\r\n        \r\n        \r\n    }","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport AdministrarProductosContext from \"../../context/AdministrarProductos/administrarProductosContext\";\r\nimport {actualizarPlato, postPlato, subirImagenPlato } from \"../../services/platosService\";\r\nimport \"./modalEditarProducto.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getCategoriaById } from \"../../services/categoriaService\";\r\n\r\nconst ModalEditarProducto = ({\r\n  categorias,\r\n  plato,\r\n  modalEditarCliente,\r\n  setModalEditarCliente,\r\n}) => {\r\n  const formPlatoOriginal = {\r\n    nombre: plato.nombre,\r\n    categoria_id: plato.categoria.id,\r\n    precio: plato.precio,\r\n    stock: plato.stock,\r\n    id: plato.id,\r\n    imagen: plato.imagen,\r\n  };\r\n\r\n  console.log(plato);\r\n\r\n  const {setActualizarPlatos: setTraerPlatosActualizados} = useContext(AdministrarProductosContext)\r\n\r\n  const [formPlatoEditado, setFormPlatoEditado] = useState(formPlatoOriginal);\r\n\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n  const [spinnerLoading, setSpinnerLoading] = useState(false);\r\n  \r\n  // VARIABLES PARA VISUALIZAR LA IMAGEN\r\n  const [imgData, setImgData] = useState(null);\r\n  const inputImg = useRef(null);\r\n  // MANEJAMOS LOS CAMBIOS DE LA IMAGEN\r\n  const handleChangeImage = (e) => {\r\n    setMensajeError(\"\");\r\n    // Validamos el archivo seleccionado\r\n    if (e.target.files[0]) {\r\n      // instanciamos un FileReader\r\n      const reader = new FileReader();\r\n      // le agregamos un evento que se ejecutara cuando la imagen termine de ser leida\r\n      reader.addEventListener(\"load\", () => {\r\n        setImgData(reader.result); // mostramos la lectura del archivo en el imgData\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]); // leemos la imagen insertada como un DataUrl\r\n    }\r\n  };\r\n\r\n  // MANEJAMOS LOS CAMBIOS DEL RESTO DE CAMPOS\r\n  const handleChange = (e) => {\r\n    setFormPlatoEditado((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const validarFormulario = () => {\r\n    setMensajeError(\"\");\r\n\r\n    // Validamos todos los campos\r\n    if (formPlatoEditado.nombre.trim().length < 3) {\r\n      setMensajeError(\"Escriba un nombre válido\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const editarPlatoStorage = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"plato\", formPlatoEditado);\r\n\r\n    // validamos los campos\r\n    if (!validarFormulario()) return;\r\n\r\n    Swal.fire({\r\n      title: \"Confirme para editar el plato\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        setSpinnerLoading(true);\r\n        // Validamos si hay una imagen insertada\r\n        // si es así la subimos al storage\r\n        if (inputImg.current.files[0]) {\r\n          console.log(\"SI HAY UNA IMAGEN INSERTADA\");\r\n          subirImagenPlato(inputImg.current.files[0]).then(rpta => {\r\n            if (rpta?.length > 0){\r\n              console.log(\"Imagen creada con éxito\", rpta);\r\n              // Ahora actualizamos el plato\r\n              getCategoriaById(formPlatoEditado.categoria_id).then(categoria_nombre => {\r\n                let objPlato = {\r\n                  ...formPlatoEditado,\r\n                  categoria: {\r\n                    id: formPlatoEditado.categoria_id,\r\n                    nombre: categoria_nombre.nombre\r\n                  },\r\n                  imagen: rpta\r\n                }\r\n                delete objPlato.categoria_id;\r\n\r\n                actualizarPlato(formPlatoEditado.id, objPlato).then(rpta => {\r\n                  if (rpta.length > 0) {\r\n                    setTraerPlatosActualizados(prevState => !prevState);\r\n                    Swal.fire({\r\n                      title: \"Plato editado con éxito\",\r\n                      icon: \"success\", \r\n                      timer: 800,\r\n                      showCancelButton: false\r\n                    });\r\n                    setModalEditarCliente(false);\r\n                    // Actualizamos los platos traidos de la categoria actual, para ver los editados\r\n                    setSpinnerLoading(false);\r\n                    console.log(\"PLATO CON IMAGEN CREADA\", rpta.id);\r\n                    // Reseteamos el formulario\r\n                    setImgData(null);\r\n                    setFormPlatoEditado(formPlatoOriginal);\r\n                  } else {\r\n                    alert(\"Error al guardar la información del plato\")\r\n                    setSpinnerLoading(false);\r\n                  }\r\n\r\n\r\n\r\n\r\n              })\r\n\r\n              })\r\n            } else {\r\n              alert(\"Error al guardar la imagen\");\r\n              setSpinnerLoading(false);\r\n            }\r\n          })\r\n        } else {\r\n          // SI NO HAY UNA IMAGEN INSERTADA, SOLO ACTUALIZAMOS EL PLATO\r\n          getCategoriaById(formPlatoEditado.categoria_id).then(categoria_nombre => {\r\n\r\n            let objPlato = {\r\n              ...formPlatoEditado,\r\n              categoria: {\r\n                id: formPlatoEditado.categoria_id,\r\n                nombre: categoria_nombre.nombre\r\n              }\r\n            }\r\n            delete objPlato.categoria_id;\r\n\r\n            actualizarPlato(formPlatoEditado.id, objPlato).then(rpta => {\r\n              if (rpta.length > 0) {\r\n                // PLATO ACTUALIZADO\r\n                Swal.fire({\r\n                  title: \"Plato editado con éxito\",\r\n                  icon: \"success\",\r\n                  timer: 800,\r\n                  showCancelButton: false\r\n                });\r\n                setModalEditarCliente(false);\r\n                // Actualizamos los platos traidos de la categoria actual, para ver los editados\r\n                setTraerPlatosActualizados(prevState =>  !prevState);\r\n                setSpinnerLoading(false);\r\n                // Reseteamos el formulario\r\n                setFormPlatoEditado(formPlatoOriginal);\r\n              } else {\r\n                alert(\"Error al actualizar el plato\");\r\n                setSpinnerLoading(false);\r\n              }\r\n            })\r\n\r\n\r\n          });  \r\n        }\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={modalEditarCliente}\r\n        onHide={() => {\r\n          setModalEditarCliente(false);\r\n        }}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Editar Plato</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <form className=\"ps-4 pe-4\" \r\n          onSubmit={editarPlatoStorage}\r\n          >\r\n            {spinnerLoading && (\r\n              <div className=\"spinner-wrapper d-flex justify-content-center align-items-center\">\r\n                <div className=\"spinner-border mb-5\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* EDITAR NOMBRE DEL PLATO */}\r\n            <div className=\"row mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label\">\r\n                Nombre del Plato\r\n              </label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"nombre\"\r\n                className=\"form-control\"\r\n                value={formPlatoEditado.nombre}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            {/* EDITAR CATEGORÍA */}\r\n            <div className=\"row mb-3\">\r\n              <label htmlFor=\"categoria\" className=\"form-label\">\r\n                Categoría\r\n              </label>\r\n\r\n              <select\r\n                id=\"categoria\"\r\n                name=\"categoria_id\"\r\n                class=\"form-select\"\r\n                aria-label=\"Selecciona la categoría\"\r\n                value={formPlatoEditado.categoria_id}\r\n                onChange={handleChange}\r\n              >\r\n                <option disabled selected>\r\n                  Selecciona la categoría\r\n                </option>\r\n                {categorias.map((categoria) => {\r\n                  return (\r\n                    <option key={categoria?.id} value={categoria.id}>\r\n                      {categoria.nombre}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            {/* EDITAR PRECIO Y STOCK */}\r\n            <div className=\"mb-5 row gap-3\">\r\n              <div className=\"col-3 p-0\">\r\n                <label htmlFor=\"precio\" className=\"form-label ps-2\">\r\n                  Precio S/\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"precio\"\r\n                  className=\"form-control\"\r\n                  name=\"precio\"\r\n                  value={formPlatoEditado.precio}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-3 p-0\">\r\n                <label htmlFor=\"stock\" className=\"form-label ps-2\">\r\n                  Stock\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"stock\"\r\n                  className=\"form-control\"\r\n                  name=\"stock\"\r\n                  value={formPlatoEditado.stock}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* INSERTAR IMAGEN */}\r\n            <div class=\"mb-3\">\r\n              <label for=\"formFileSm\" className=\"form-label\">\r\n                Cambiar de imágen (Opcional)\r\n              </label>\r\n              <input\r\n                accept=\".png, .jpg, .jpeg\"\r\n                className=\"form-control form-control-sm\"\r\n                id=\"formFileSm\"\r\n                name=\"imagen\"\r\n                type=\"file\"\r\n                ref={inputImg}\r\n                onChange={handleChangeImage}\r\n              />\r\n            </div>\r\n            {/* SECCIÓN DONDE SE PREVISUALIZA LA IMAGEN **********/}\r\n            <div className=\"row mb-3\">\r\n              {imgData !== null ? (\r\n                <div className=\"col-6\">\r\n                  <img\r\n                    style={{ width: \"100%\" }}\r\n                    src={imgData}\r\n                    alt=\"foto del producto\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"col-6\">\r\n                  <img\r\n                    style={{ width: \"100%\" }}\r\n                    src={formPlatoEditado.imagen}\r\n                    alt=\"foto del producto\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            {mensajeError.length > 0 && (\r\n              <div class=\"alert alert-warning\" role=\"alert\">\r\n                {mensajeError}\r\n              </div>\r\n            )}\r\n            <hr />\r\n            <div className=\"mb-3 mt-4 d-flex justify-content-end gap-3\">\r\n              <button\r\n                style={{\"z-index\": \"1\"}}\r\n                class=\"btn btn-secondary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setMensajeError(\"\");\r\n                  setFormPlatoEditado(formPlatoOriginal);\r\n                  setModalEditarCliente(false);\r\n                  setImgData(null);\r\n                  setSpinnerLoading(false);\r\n                }}\r\n              >\r\n                Cerrar\r\n              </button>\r\n\r\n              <button class=\"btn btn-dark\" type=\"submit\">\r\n                Editar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalEditarProducto;\r\n","import React, { useState } from 'react'\r\nimport './platoAdministrar.css'\r\nimport productImg from '../../assets/images/frapuchino.png'\r\nimport ModalEditarProducto from '../modalEditarProducto/ModalEditarProducto'\r\n\r\nconst PlatoAdministrar = ({plato, categorias}) => {\r\n\r\n    const [modalEditarCliente, setModalEditarCliente] = useState(false)\r\n    \r\n    return (\r\n        <>\r\n        <ModalEditarProducto categorias={categorias} plato={plato} modalEditarCliente={modalEditarCliente} setModalEditarCliente={setModalEditarCliente} />\r\n        <div className=\"plato-component shadow\">\r\n            <div className=\"plato-img\">\r\n                <img src={plato.imagen} alt=\"\" />\r\n            </div>\r\n            <div className=\"plato-body\">\r\n                <h3 className=\"plato-title\">\r\n                    {plato.nombre}\r\n                </h3>\r\n                <p className=\"plato-price\">\r\n                    S/ {plato.precio}\r\n                </p>\r\n                {/* <div className=\"plato-size\">\r\n                    <p>Tamaño</p>\r\n                    <div className=\"size-options\">\r\n                        <p>S</p>\r\n                        <p>M</p>\r\n                        <p>L</p>\r\n                    </div>\r\n                </div> */}\r\n                <p className=\"plato-stock\">\r\n                    {plato.stock} disponibles\r\n                </p>\r\n            </div>\r\n            <div className=\"plato-footer\">\r\n                <button \r\n                onClick={() => {setModalEditarCliente(true)}}\r\n                className=\"agregarplato-btn\">Editar</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlatoAdministrar\r\n","import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport AdministrarProductosContext from \"../../context/AdministrarProductos/administrarProductosContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  actualizarPlatos,\r\n  postPlato,\r\n  subirImagenPlato,\r\n} from \"../../services/platosService\";\r\nimport \"./modalCrearPlato.css\";\r\n\r\nconst ModalCrearPlato = ({ modalCrear, setModalCrear }) => {\r\n  const { setActualizarPlatos, categoriaSeleccionada } = useContext(\r\n    AdministrarProductosContext\r\n  );\r\n\r\n  console.log(\"CATEGORIA: \", categoriaSeleccionada);\r\n\r\n  const formPlatoVacio = {\r\n    nombre: \"\",\r\n    precio: 0,\r\n    stock: 1,\r\n    categoria: categoriaSeleccionada,\r\n  };\r\n  const [formPlatoCrear, setformPlatoCrear] = useState(formPlatoVacio);\r\n  const [spinnerLoading, setSpinnerLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (categoriaSeleccionada) {\r\n      console.log(\"ACTUALIZANDO CATEGORIA >>>>>\");\r\n      setformPlatoCrear((prevState) => ({\r\n        ...prevState,\r\n        categoria: categoriaSeleccionada,\r\n      }));\r\n    }\r\n  }, [categoriaSeleccionada]);\r\n\r\n  // const { crearPlato } = useContext(AdministrarProductosContext);\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n  const inputImg = useRef(null);\r\n  let img = null;\r\n\r\n  // SETEAR LA CATEGORIA SELECCIONADA COMO CATEGORIA DEL PLATO, CUANDO ESTA SE CARGUE\r\n  // useEffect(() => {\r\n  //   setformPlatoCrear((prevState) => ({\r\n  //     ...prevState,\r\n  //     categoria_id: categoriaActualCrearPlato?.id,\r\n  //   }));\r\n  //   console.log(\"categoriaActualCrearPlato\" , categoriaActualCrearPlato);\r\n  // }, [categoriaActualCrearPlato]);\r\n\r\n  // VARIABLE PARA VISUALIZAR LA IMAGEN ********************\r\n  const [imgData, setImgData] = useState(null);\r\n\r\n  // MANEJAMOS LOS CAMBIOS EN LA IMAGEN\r\n  const handleChangeImage = (e) => {\r\n    setMensajeError(\"\");\r\n    // validamos el primer archivo\r\n    if (e.target.files[0]) {\r\n      // seteamos la imagen seleccionada¿\r\n      console.log(\"img: \", inputImg.current.files[0]);\r\n      console.log(\"e.target.files[0]:  \", e.target.files[0]);\r\n      const reader = new FileReader();\r\n      // cuando la lectura se complete setearemos el resultado del reader como valor que se previsualizara\r\n      /* el atributo \"result\" contiene la información URL representando la información del archivo como una \r\n       cadena de caracteres codificados en base64 */\r\n      reader.addEventListener(\"load\", () => {\r\n        setImgData(reader.result);\r\n        // setSubmitActivado(true);\r\n      });\r\n      //\r\n      // leemos el contenido\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // MANEJAMOS LOS CAMBIOS DE LOS DEMAS INPUTS\r\n  const handleChange = (e) => {\r\n    setMensajeError(\"\");\r\n    setformPlatoCrear((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const validarFormuralio = () => {\r\n    setMensajeError(\"\");\r\n\r\n    // Validamos todos los campos\r\n    if (formPlatoCrear.nombre.trim().length < 3) {\r\n      setMensajeError(\"Escriba un nombre válido\");\r\n      return false;\r\n    }\r\n\r\n    if (imgData === null) {\r\n      setMensajeError(\"Inserte una imágen del producto\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const crearPlatoStorage = (e) => {\r\n    console.log(\"plato: \", formPlatoCrear);\r\n\r\n    e.preventDefault();\r\n\r\n    // validamos los campos\r\n    if (!validarFormuralio()) return;\r\n\r\n    Swal.fire({\r\n      title: \"Confirme para crear el plato\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        console.log(\"PLATO A CREAR >>>\", formPlatoCrear);\r\n        setSpinnerLoading(true);\r\n        // Primero subimos la imagen\r\n        subirImagenPlato(inputImg.current.files[0]).then((rpta) => {\r\n          // console.log(\"Respuesta al crear la imagen 3========\");\r\n          if (rpta?.length > 0) {\r\n            console.log(\"Imagen creada con exito\", rpta);\r\n            // Ahora creamos el plato\r\n            postPlato({\r\n              ...formPlatoCrear,\r\n              imagen: rpta,\r\n            }).then((rpta) => {\r\n              if (rpta.id) {\r\n                Swal.fire({\r\n                  title: \"Plato creado con éxito\",\r\n                  icon: \"success\",\r\n                  timer: 800,\r\n                  showCancelButton: false,\r\n                });\r\n                setModalCrear(false);\r\n                setActualizarPlatos((prevState) => !prevState);\r\n                setSpinnerLoading(false);\r\n                console.log(\"PLATO CON IMAGEN CREADA\", rpta.id);\r\n                // Reseteamos el formulario\r\n                setImgData(null);\r\n                setformPlatoCrear(formPlatoVacio);\r\n              } else {\r\n                alert(\"Error al guardar la información del plato\");\r\n                setSpinnerLoading(false);\r\n              }\r\n            });\r\n          } else {\r\n            alert(\"Error al guardar la imagen\");\r\n            setSpinnerLoading(false);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={modalCrear}\r\n      onHide={() => {\r\n        setModalCrear(false);\r\n      }}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Crear Plato</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <form\r\n          className=\"ps-4 pe-4 form-crear-producto\"\r\n          onSubmit={crearPlatoStorage}\r\n        >\r\n          {spinnerLoading && (\r\n            <div className=\"spinner-wrapper d-flex justify-content-center align-items-center\">\r\n              <div className=\"spinner-border mb-5\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* CREAR NOMBRE DEL PLATO */}\r\n          <div className=\"row mb-3\">\r\n            <label htmlFor=\"name\" className=\"form-label\">\r\n              Nombre del Plato\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"nombre\"\r\n              className=\"form-control\"\r\n              value={formPlatoCrear.nombre}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {/* ELEGIR CATEGORÍA */}\r\n          <div className=\"row mb-3\">\r\n            <label htmlFor=\"categoria\" className=\"form-label\">\r\n              Categoría\r\n            </label>\r\n\r\n            <select\r\n              id=\"categoria\"\r\n              name=\"categoria_id\"\r\n              class=\"form-select\"\r\n              aria-label=\"Selecciona la categoría\"\r\n              value={formPlatoVacio.categoria_id}\r\n            >\r\n              <option selected>{categoriaSeleccionada?.nombre}</option>\r\n              {/* {categorias.map((categoria) => {\r\n                return (\r\n                  <option key={categoria.id} value={categoria.id}>\r\n                    {categoria.nombre}\r\n                  </option>\r\n                );\r\n              })} */}\r\n            </select>\r\n          </div>\r\n          {/* INGRESAR PRECIO Y STOCK */}\r\n          <div className=\"mb-5 row gap-3\">\r\n            <div className=\"col-3 p-0\">\r\n              <label htmlFor=\"precio\" className=\"form-label ps-2\">\r\n                Precio S/\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                id=\"precio\"\r\n                className=\"form-control\"\r\n                name=\"precio\"\r\n                value={formPlatoCrear.precio}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-3 p-0\">\r\n              <label htmlFor=\"stock\" className=\"form-label ps-2\">\r\n                Stock\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"stock\"\r\n                min=\"1\"\r\n                className=\"form-control\"\r\n                name=\"stock\"\r\n                value={formPlatoCrear.stock}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* INSERTAR IMAGEN */}\r\n          <div class=\"mb-3\">\r\n            <label for=\"formFileSm\" className=\"form-label\">\r\n              Selecciona una imágen\r\n            </label>\r\n            <input\r\n              accept=\".png, .jpg, .jpeg\"\r\n              className=\"form-control form-control-sm\"\r\n              id=\"formFileSm\"\r\n              name=\"imagen\"\r\n              type=\"file\"\r\n              onChange={handleChangeImage}\r\n              ref={inputImg}\r\n            />\r\n          </div>\r\n          {/* SECCION DONDE SE PREVISUALIZA LA IMAGEN ************ */}\r\n          {imgData !== null && (\r\n            <div>\r\n              <img width=\"200\" src={imgData} alt=\"foto del producto\" />\r\n            </div>\r\n          )}\r\n          {/* *********************************************** */}\r\n          {mensajeError.length > 0 && (\r\n            <div class=\"alert alert-warning\" role=\"alert\">\r\n              {mensajeError}\r\n            </div>\r\n          )}\r\n          <hr />\r\n          <div className=\"mb-3 mt-4 d-flex justify-content-end gap-3\">\r\n            <button\r\n              type=\"button\"\r\n              style={{ \"z-index\": \"1\" }}\r\n              onClick={() => {\r\n                setMensajeError(\"\");\r\n                setformPlatoCrear(formPlatoVacio);\r\n                setImgData(null);\r\n                setModalCrear(false);\r\n                setSpinnerLoading(false);\r\n              }}\r\n            >\r\n              Cerrar\r\n            </button>\r\n\r\n            <button type=\"submit\">Crear Plato</button>\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalCrearPlato;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { postCategoria } from \"../../services/categoriaService\";\r\nimport Swal from 'sweetalert2'\r\nimport AdministrarProductosContext from \"../../context/AdministrarProductos/administrarProductosContext\";\r\nimport './modalAdministrarCategoria.css'\r\n\r\n\r\nconst ModalAdministrarCategoria = ({\r\n  modalCategoria,\r\n  setModalCategoria,\r\n  categorias,\r\n}) => {\r\n\r\n  const {setActualizarCategorias} = useContext(AdministrarProductosContext)\r\n\r\n  const [modoEdicion, setModoEdicion] = useState(false);\r\n  console.log(\"MODAL CATEGORIA\");\r\n  console.log(modalCategoria);\r\n\r\n\r\n\r\n  const editarCategoria = () => {\r\n\r\n  }\r\n\r\n  //  FUNCIONALIDAD CREAR CATEGORIA\r\n  const [inputCrearCategoria, setInputCrearCategoria] = useState(\"\")\r\n\r\n  const handleChangeCrearCategoria = (e) => {\r\n    setInputCrearCategoria(e.target.value);\r\n  } \r\n\r\n  const crearCategoria = () => {\r\n    if(inputCrearCategoria.trim().length > 3) {\r\n       Swal.fire({\r\n         title: \"Confirme para crear la categoría\",\r\n         icon: \"question\",\r\n         showCancelButton: true\r\n\r\n       }).then(rpta => {\r\n         if (rpta.isConfirmed){\r\n           try{\r\n             postCategoria({nombre: inputCrearCategoria}).then(rpta => {\r\n               if (rpta?.id) {\r\n                 console.log(\"Categoria Creada >>>>>>>>>\");\r\n                 Swal.fire({\r\n                   title: \"Categoria creada\",\r\n                   icon: \"success\", \r\n                   timer: 800,\r\n                   showCancelButton: false\r\n                 })\r\n                 setInputCrearCategoria(\"\");\r\n                 setActualizarCategorias(prevState => !prevState)\r\n               }\r\n               else {\r\n                 alert(\"Error al crear la categoria\")\r\n               }\r\n             })\r\n           } catch(error) {\r\n             console.log(\"ERROR AL CREAR LA CATEGORIA: \", error);\r\n           }\r\n\r\n         }\r\n       })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal\r\n      show={modalCategoria}\r\n      onHide={() => {\r\n        setModalCategoria(false);\r\n      }}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n          <Modal.Title>Administrar Categorias</Modal.Title>\r\n          <button\r\n            style={{\r\n              background: \"transparent\",\r\n              border: \"none\",\r\n              outline: \"none\",\r\n            }}\r\n            onClick={() => setModalCategoria(false)}\r\n          >\r\n            <i class=\"bx bx-sm bx-x\"></i>\r\n          </button>\r\n        </div>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <ul className=\"w-100 m-0 p-0 mb-5\">\r\n          {categorias.map((categoria) => {\r\n            return (\r\n              <li className=\"p-2 d-flex\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  name={categoria.id}\r\n                  type=\"text\"\r\n                  value={categoria.nombre}\r\n                  aria-label=\"readonly input example\"\r\n                ></input>\r\n               \r\n               <button className=\"\">Editar</button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div class=\"form-floating mt-2 mb-2 w-100 d-flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control shadow-sm\"\r\n            id=\"floatingInput\"\r\n            placeholder=\"Crea una categoría\"\r\n            value={inputCrearCategoria}\r\n            onChange={handleChangeCrearCategoria}\r\n          />\r\n          <label for=\"floatingInput\">Crea una categoría</label>\r\n          <button \r\n          onClick={crearCategoria}\r\n          type=\"button\" className=\"btn btn-dark shadow-sm\">\r\n            Crear\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalAdministrarCategoria;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./administrarProductos.css\";\r\nimport PlatoAdministrar from \"../platoAdministrar/PlatoAdministrar\";\r\nimport AdministrarProductosContext from \"../../context/AdministrarProductos/administrarProductosContext\";\r\nimport ModalCrearPlato from \"../modalCrearPlato/ModalCrearPlato\";\r\nimport ModalAdministrarCategoria from \"../modalAdministrarCategoria/ModalAdministrarCategoria\";\r\n\r\nconst AdministrarProductos = () => {\r\n  const {\r\n    categorias,\r\n    cargandoCategorias,\r\n    setPlatosState,\r\n    platos,\r\n    cargandoPlatos,\r\n    categoriaSeleccionada,\r\n    setCategoriaSeleccionada,\r\n  } = useContext(AdministrarProductosContext);\r\n\r\n  const [modalCrear, setModalCrear] = useState(false);\r\n  const [modalCategoria, setModalCategoria] = useState(false);\r\n\r\n  return (\r\n    <section className=\"administrar-productos shadow\">\r\n      <div className=\"administrar-productos__header pt-xxl-5 pt-xl-4 pt-3 ps-3 pe-2 mb-xxl-4 mb-0\">\r\n        <h3 className=\"ps-2\">Administrar Productos</h3>\r\n        {categorias.length > 0 && (\r\n          <div>\r\n            <ModalAdministrarCategoria\r\n              modalCategoria={modalCategoria}\r\n              setModalCategoria={setModalCategoria}\r\n              categorias={categorias}\r\n            />\r\n            <button\r\n              onClick={() => setModalCategoria(true)}\r\n              className=\"btn-administrar-categorias\"\r\n            >\r\n              <i class=\"bx bx-cog\"></i> Administrar Categorias\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <nav className=\"administrar-productos__nav\">\r\n        {/************  CATEGORIAS PARA SELECCIONAR ************/}\r\n        <ul className=\"d-flex gap-4 m-0 ps-lg-3\">\r\n          {categorias.map((categoria) => {\r\n            return (\r\n              <li\r\n                key={categoria.id}\r\n                className={\r\n                  categoriaSeleccionada?.id === categoria.id\r\n                    ? \"administrar-productos__link p-2 administrar-productos__link--activate\"\r\n                    : \"administrar-productos__link p-2\"\r\n                }\r\n                onClick={() => {\r\n                  console.log(\"CLICK CATEGORIA\");\r\n                  setPlatosState((prevState) => ({\r\n                    cargando: true,\r\n                    platos: [],\r\n                  }));\r\n                  setCategoriaSeleccionada(categoria);\r\n                }}\r\n              >\r\n                {categoriaSeleccionada?.id === categoria?.id\r\n                  ? `${categoria.nombre} (${platos.length})`\r\n                  : categoria.nombre}\r\n                {/* {categoria.nombre}  */}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n\r\n      <div className=\"administrar-productos__body ps-xxl-3 pe-xxl-3 ps-0 p-0\">\r\n        {/*============> MODAL PARA CREAR PLATOS <==================*/}\r\n        <ModalCrearPlato\r\n          modalCrear={modalCrear}\r\n          setModalCrear={setModalCrear}\r\n        />\r\n        <div className=\"administrar-productos__container p-xxl-5 p-4\">\r\n          {categoriaSeleccionada !== null && cargandoPlatos === false && (\r\n            <div\r\n              onClick={() => {\r\n                setModalCrear(true);\r\n              }}\r\n              className=\"crear-plato-btn\"\r\n            >\r\n              <i class=\"bx bx-md bx-plus\"></i>\r\n              Crear nuevo plato\r\n            </div>\r\n          )}\r\n\r\n          {categoriaSeleccionada !== null ? (\r\n            !cargandoPlatos ? (\r\n              platos.map((plato) => {\r\n                return (\r\n                  <PlatoAdministrar\r\n                    key={plato.id}\r\n                    plato={plato}\r\n                    categorias={categorias}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div class=\"alert alert-info fs-4 m-4\" role=\"alert\">\r\n              Selecciona una categoría\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <ProductoComponent/>\r\n                <ProductoComponent/>\r\n                <ProductoComponent/> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdministrarProductos;\r\n","import React from 'react'\r\n\r\nconst AdministrarSeguridad = () => {\r\n    return (\r\n        <div>\r\n            <h1>Administrar seguridad</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdministrarSeguridad\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./settings.css\";\r\n\r\nconst SettingsMenu = () => {\r\n  return (\r\n    <div className=\"settings-menu shadow-sm\">\r\n      <ul>\r\n        <li>\r\n          <NavLink\r\n            activeClassName=\"settings-menu-active\"\r\n            className=\"settings-menu__link\"\r\n            to=\"/administrar/productos\"\r\n          >\r\n            <div className=\"settings-menu__icon\">\r\n              <i class=\"bx bx-store bx-md\"></i>\r\n            </div>\r\n\r\n            <div className=\"settings-menu__info\">\r\n              <p className=\"settings-menu__title\">Administrar productos</p>\r\n            </div>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName=\"settings-menu-active\"\r\n            className=\"settings-menu__link\"\r\n            to=\"/administrar/seguridad\"\r\n          >\r\n            <div className=\"settings-menu__icon\">\r\n              <i class=\"bx bx-store bx-md\"></i>\r\n            </div>\r\n\r\n            <div className=\"settings-menu__info\">\r\n              <p className=\"settings-menu__title\">Seguridad</p>\r\n            </div>\r\n          </NavLink>\r\n        </li>\r\n\r\n        \r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { storage } from \"../../firebase/firebase\";\r\nimport { getCategorias } from \"../../services/categoriaService\";\r\nimport { getPlatos, getPlatosByCategoria, postPlato } from \"../../services/platosService\";\r\nimport AdministrarProductosContext from \"./administrarProductosContext\";\r\nimport Swal from 'sweetalert2'\r\nimport moment from \"moment\";\r\n\r\n\r\nconst AdministrarProductosState = ({ children }) => {\r\n\r\n\r\n  const [categoriaSeleccionada, setCategoriaSeleccionada] = useState(null); \r\n  const [actualizarPlatos, setActualizarPlatos] = useState(false)\r\n  const [actualizarCategorias, setActualizarCategorias] = useState(false)\r\n\r\n  // TRAER CATEGORIAS\r\n  const [categoriasState, setCategoriasState] = useState({\r\n    categorias: [],\r\n    cargando: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCategorias()\r\n      .then((data) => {\r\n        setCategoriasState({\r\n          categorias: data,\r\n          cargando: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setCategoriasState((prevState) => ({\r\n          ...prevState,\r\n          cargando: false,\r\n        }));\r\n      });\r\n  }, [actualizarCategorias]);\r\n  //===========================\r\n\r\n  // TRAER PLATOS SEGUN CATEGORIA SELECCIONADA\r\n  const [platosState, setPlatosState] = useState({\r\n    platos: [],\r\n    cargando: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"TRAYENDO PLATOS SEGUN CATEGORIA\");\r\n    if (categoriaSeleccionada) {\r\n      console.log(\"CATEGORIA SELECCIONADA VÁLIDA\");\r\n      getPlatosByCategoria(categoriaSeleccionada.id).then((data) => {\r\n        setPlatosState((prevState) => ({\r\n          cargando: false,\r\n          platos: data,\r\n        }));\r\n      });\r\n    } else {\r\n      setPlatosState((prevState) => ({\r\n        ...prevState,\r\n        cargando: false,\r\n      }));\r\n    }\r\n  }, [categoriaSeleccionada, actualizarPlatos]);\r\n\r\n  //========================\r\n  \r\n  // FUNCION PARA CREAR UN PLATO \r\n  const crearPlato = (objPlato) => {\r\n    console.log(\"FUNCTION CREAR PLATO\");\r\n\r\n    // Primero subimos la imagen\r\n    const uploadTask = storage.ref(`images/${objPlato.nombre}`).put(objPlato.imagen);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n      },\r\n      (error) => {\r\n        console.log(\"ERROR AL SUBIR IMAGEN PARA CREAR PLATO\");\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage.ref(\"images\")\r\n        .child(objPlato.imagen.name)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          /**\r\n           * Una vez que firebase subio la imagen\r\n           * le pasamos la url como imagen al plato\r\n           */\r\n          console.log(\"CREANDO PLATO LUEGO DE SUBIR LA IMAGEN ********\");\r\n          objPlato.imagen = url;\r\n          console.log(objPlato);\r\n          postPlato(objPlato).then(rpta => {\r\n            if (rpta.id){\r\n              console.log(\"PRODUCTO CREADO CON EXITO ==========\");\r\n              Swal.fire({\r\n                title: \"Plato creado exitosamente\",\r\n                icon: \"success\",\r\n                timer: 300,\r\n                showCancelButton: false\r\n              })\r\n              setActualizarPlatos(!actualizarPlatos)\r\n            }\r\n          })\r\n\r\n        })\r\n      }\r\n    )\r\n\r\n    // Creamos el plato completo, incluyendo ya  la url de la imagen subida\r\n\r\n  }\r\n\r\n  // FUNCION PARA EDITAR UN PLATO \r\n  const editarPlato = (objPlato) => {\r\n\r\n  }\r\n\r\n  // FUNCION PARA CREAR UNA CATEGORIA\r\n  const crearCategoria = objCategoria => {\r\n\r\n  }\r\n\r\n  // FUNCION PARA EDITAR UNA CATEGORIA\r\n  const editarCategoria = objCategoria => {\r\n\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <AdministrarProductosContext.Provider\r\n      value={{\r\n        categorias: categoriasState.categorias,\r\n        cargandoCategorias: categoriasState.cargando,\r\n        platos: platosState.platos,\r\n        setPlatosState,\r\n        cargandoPlatos: platosState.cargando,\r\n        categoriaSeleccionada, \r\n        setCategoriaSeleccionada, \r\n        crearPlato,\r\n        crearCategoria,\r\n        setActualizarPlatos,\r\n        setActualizarCategorias\r\n      }}\r\n    >\r\n      {children}\r\n    </AdministrarProductosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AdministrarProductosState;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport AdministrarProductos from \"../components/administrarProductos/AdministrarProductos\";\r\nimport AdministrarSeguridad from \"../components/administrarSeguridad/AdministrarSeguridad\";\r\nimport SettingsMenu from \"../components/settingsMenu/SettingsMenu\";\r\nimport AdministrarProductosState from \"../context/AdministrarProductos/administrarProductosState\";\r\n\r\nconst AdministrarScreen = () => {\r\n  return (\r\n    <AdministrarProductosState>\r\n      <section className=\"row p-xxl-4 pb-xxl-2 pt-xl-4 ps-xl-4 pb-xl-2 p-2 pt-3 m-0\">\r\n        <h2 className=\"title\">Administrar</h2>\r\n\r\n        <div className=\"col-3 pt-xxl-4 pt-xl-3 pt-2\">\r\n          <SettingsMenu />\r\n        </div>\r\n\r\n        <div className=\"col-9 pt-xxl-4 pt-xl-3 pt-2\">\r\n          <Switch>\r\n            <Route\r\n              path=\"/administrar/productos\"\r\n              component={AdministrarProductos}\r\n            />\r\n            <Route\r\n              path=\"/administrar/seguridad\"\r\n              component={AdministrarSeguridad}\r\n            />\r\n          </Switch>\r\n          <Redirect to=\"/administrar/productos\" />\r\n        </div>\r\n      </section>\r\n    </AdministrarProductosState>\r\n  );\r\n};\r\n\r\nexport default AdministrarScreen;\r\n","import React from \"react\";\r\nimport \"./datoEstadistico.css\";\r\n\r\nconst DatoEstadistico = ({ icon, number, caption, color, cargando }) => {\r\n  return (\r\n    <div className=\"dato-estadistico\">\r\n      <p className={`dato-icon ${color}`}>{icon}</p>\r\n\r\n      {cargando ? (\r\n        <div\r\n          class=\"spinner-border spinner-border-sm text-secondary\"\r\n          role=\"status\"\r\n        >\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p className=\"dato-number\">{number}</p>\r\n          <p className=\"dato-info\">{caption}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatoEstadistico;\r\n","import React from 'react'\r\nimport DatoEstadistico from '../datoEstadistico/DatoEstadistico'\r\nimport './estadisticasClientes.css'\r\n\r\nconst EstadisticasClientes = ({numClientes, cargando}) => {\r\n    return (\r\n        <div className=\"estadisticas-clientes\">\r\n            <DatoEstadistico icon={<i class='bx bx-group bx-md'></i>} cargando={cargando} number={numClientes} caption=\"Clientes\" color=\"bg-ventas\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstadisticasClientes\r\n","import React, { useContext } from \"react\";\r\nimport \"./estadisticasComponent.css\";\r\nimport DatoEstadistico from \"../datoEstadistico/DatoEstadistico\";\r\nimport PedidosContext from \"../../context/pedidos/pedidosContext\";\r\n\r\nconst EstadisticasComponent = ({ pedidos, cargando }) => {\r\n  let ventasTotales = pedidos?.reduce((montoVendido, pedido) => {\r\n    return (montoVendido += pedido.monto_a_pagar);\r\n  }, 0);\r\n\r\n  let montoPorCobrar = pedidos?.reduce((contador, pedido) => {\r\n    return (contador += pedido.monto_a_pagar - pedido.monto_pagado);\r\n  }, 0);\r\n\r\n  console.log(\"Estadisticas Component\", pedidos)\r\n\r\n  return (\r\n    <div className=\"estadisticas-component\">\r\n      <DatoEstadistico\r\n        cargando={cargando}\r\n        icon={<i class=\"bx bxs-dish bx-md\"></i>}\r\n        number={pedidos.length}\r\n        caption=\"Pedidos Totales\"\r\n        color=\"bg-pedidos\"\r\n      />\r\n      <DatoEstadistico\r\n        cargando={cargando}\r\n        icon={<i className=\"bx bx-dollar-circle bx-md\"></i>}\r\n        number={`S/ ${ventasTotales}`}\r\n        caption=\"Monto Vendido\"\r\n        color=\"bg-ventas\"\r\n      />\r\n      <DatoEstadistico\r\n        cargando={cargando}\r\n        icon={<i class=\"bx bxs-pie-chart-alt bx-md\"></i>}\r\n        number={`S/ ${montoPorCobrar}`}\r\n        caption=\"Por cobrar\"\r\n        color=\"bg-cobrar\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EstadisticasComponent;\r\n","import { db } from \"../firebase/firebase\";\r\n\r\nexport const getClientes = async() => {\r\n    const peticion = await db.collection('clientes').get();\r\n    if (!peticion.docs){\r\n        console.log(\"ERROR AL CONSUMIR LISTA DE CLIENTES\");\r\n        return;\r\n    }\r\n    const data = peticion.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }))\r\n    return data;\r\n}\r\n\r\nexport const getClienteById = async(idCliente) => {\r\n    try{\r\n        const peticion = await db.collection('clientes').doc(idCliente).get();\r\n        if (!peticion.exists)return;\r\n        return peticion.data();\r\n    } catch(error){\r\n        console.log(\"Error al traer el cliente por su id: \", error);\r\n    }\r\n}\r\n\r\nexport const updateCliente = async(idCliente, objCliente) => {\r\n    try{\r\n        const peticion = await db.collection('clientes').doc(idCliente).update(objCliente);\r\n        return \"pedido actualizado\"\r\n    } catch(error){\r\n        console.log(\"Error al actualizar el cliente\");\r\n    }\r\n}\r\n\r\nexport const postCliente = async(objCliente) => {\r\n    const peticion = await db.collection('clientes').add(objCliente)\r\n    if (!peticion.id){\r\n        console.log(\"ERROR AL CREAR CLIENTE\");\r\n        return\r\n    }\r\n    return peticion;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { getClienteById, updateCliente } from \"../../services/clientesService\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalEditarCliente = ({\r\n  activarModalEditarCliente,\r\n  setActivarModalEditarCliente,\r\n  idCliente,\r\n  setActualizadorClientes\r\n}) => {\r\n  const formVacio = {\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    celular: null,\r\n  };\r\n\r\n  console.log(\"ID CLIENTE MODAL: \", idCliente);\r\n\r\n  const [cliente, setCliente] = useState({});\r\n  const [cargando, setCargando] = useState(true);\r\n  const [formCliente, setFormCliente] = useState(formVacio);\r\n  const [mensajeError, setMensajeError] = useState(null);\r\n  const [activarBtnEditar, setActivarBtnEditar] = useState(false);\r\n  const [actualizadorCliente, setActualizadorCliente] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (idCliente === null) return;\r\n    getClienteById(idCliente).then((data) => {\r\n      setFormCliente({\r\n        ...data,\r\n        id: idCliente,\r\n      });\r\n      setCargando(false);\r\n      setCliente({\r\n        ...data,\r\n        id: idCliente,\r\n      });\r\n    });\r\n  }, [actualizadorCliente]);\r\n\r\n  const handleChange = (e) => {\r\n    setActivarBtnEditar(true);\r\n    setMensajeError(null);\r\n    setFormCliente((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const validarFormulario = () => {\r\n    setMensajeError(null);\r\n    if (\r\n      formCliente.nombre.trim() === cliente.nombre &&\r\n      formCliente.apellido.trim() === cliente.apellido &&\r\n      formCliente.celular?.trim() === cliente.celular\r\n    ) {\r\n      console.log(formCliente.celular, cliente.celular);\r\n      setMensajeError(\"Ningún campo modificado\");\r\n      return false;\r\n    }\r\n    if (formCliente.nombre.trim().length < 3) {\r\n      setMensajeError(\"Escribe un nombre válido\");\r\n      return false;\r\n    }\r\n    if (formCliente.apellido.trim().length < 3) {\r\n      setMensajeError(\"Escribe un apellido válido\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validarFormulario()) return;\r\n    Swal.fire({\r\n        title: \"Desea editar el cliente?\",\r\n        icon: \"question\", \r\n        showCancelButton: true\r\n    }).then(rpta => {\r\n        if (rpta.isConfirmed) {\r\n            setCargando(true);\r\n            updateCliente(idCliente, formCliente).then(rpta => {\r\n                if (rpta?.length > 0) {\r\n                    setCargando(false);\r\n                    setActualizadorCliente(prevState => !prevState)\r\n                    setActualizadorClientes(prevState => !prevState)\r\n                    Swal.fire({\r\n                        title: \"Cliente editado\",\r\n                        icon: \"success\", \r\n                        showCancelButton: false,\r\n                        timer: 800\r\n                    })\r\n                    setActivarModalEditarCliente(false)\r\n                }\r\n            })\r\n        }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={activarModalEditarCliente}\r\n      onHide={() => {\r\n        setActivarModalEditarCliente(false);\r\n      }}\r\n      size=\"md\"\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Editar Cliente</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <form onSubmit={handleSubmit} className=\"ms-xxl-5 me-xxl-5 ms-xl-4 me-xl-4\">\r\n          {cargando ? (\r\n            <div className=\"text-center\">\r\n              <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"form__conn\">\r\n              <div className=\"row\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\" htmlFor=\"\">\r\n                    Nombre\r\n                  </label>\r\n                  <input\r\n                    onChange={handleChange}\r\n                    name=\"nombre\"\r\n                    value={formCliente.nombre}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\" htmlFor=\"\">\r\n                    Apellido\r\n                  </label>\r\n                  <input\r\n                    onChange={handleChange}\r\n                    name=\"apellido\"\r\n                    value={formCliente.apellido}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-6 mb-3\">\r\n                  <label className=\"form-label\" htmlFor=\"\">\r\n                    Celular (Opcional)\r\n                  </label>\r\n                  <input\r\n                    onChange={handleChange}\r\n                    name=\"celular\"\r\n                    value={formCliente.celular}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {mensajeError ? (\r\n                <div class=\"alert alert-info\" role=\"alert\">\r\n                  {mensajeError}\r\n                </div>\r\n              ) : undefined}\r\n              <hr />\r\n              <div className=\"mt-4 d-flex justify-content-end gap-3\">\r\n                <button\r\n                  type={activarBtnEditar ? \"submit\" : \"button\"}\r\n                  className={\r\n                    activarBtnEditar ? \"btn btn-table-brown\" : \"btn btn-ligth\"\r\n                  }\r\n                >\r\n                  Editar\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    //   setCargando(true);\r\n                    setFormCliente(formVacio);\r\n                    setActivarModalEditarCliente(false);\r\n                  }}\r\n                  className=\"btn btn-table-secondary\"\r\n                >\r\n                  Cerrar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalEditarCliente;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { getClienteById } from \"../../services/clientesService\";\r\nimport { getPedidos } from \"../../services/pedidosService\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nconst ModalListaPedidosByCliente = ({\r\n  activarModalVerPedidos,\r\n  setActivarModalVerPedidos,\r\n  idCliente,\r\n  setIdPedidoDetalle,\r\n  setActivarModalDetallePedido,\r\n  \r\n}) => {\r\n  const [cliente, setCliente] = useState(null);\r\n  const [pedidos, setPedidos] = useState([]);\r\n  const [cargandoCliente, setCargandoCliente] = useState(true);\r\n  const [cargandoPedidos, setCargandoPedidos] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setCargandoCliente(true);\r\n    setCargandoPedidos(true);\r\n    getClienteById(idCliente).then((data) => {\r\n      console.log(\"CLIENTE\");\r\n      console.log(data);\r\n      setCliente(data);\r\n      setCargandoCliente(false);\r\n    });\r\n    getPedidos().then((pedidos) => {\r\n      console.log(\"TODOS LOS PEDIDOS: \", pedidos);\r\n      let filtrarPedidos = pedidos.filter(\r\n        (pedido) => pedido.cliente.id === idCliente\r\n      );\r\n      console.log(\"FILTRADOS: \", filtrarPedidos);\r\n      setPedidos(filtrarPedidos);\r\n      setCargandoPedidos(false);\r\n    });\r\n  }, []);\r\n\r\n  let dataTable = {\r\n    columns: [\r\n      { label: \"Fecha\", field: \"fecha\" },\r\n      { label: \"Platos\", field: \"cantidad_platos\" },\r\n      { label: \"Total\", field: \"total\" },\r\n      { label: \"Entrega\", field: \"entrega\" },\r\n      { label: \"Estado\", field: \"estado\" },\r\n      { label: \"Ver Detalle\", field: \"ver_detalle\" },\r\n    ],\r\n    rows: [\r\n      {\r\n        fecha: \"\",\r\n        cantidad_platos: \"\",\r\n        total: \"\",\r\n        entrega: \"\",\r\n        estado: \"\",\r\n        ver_detalle: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const cantidadPlatos = (pedido) => {\r\n    let cantidad = pedido.platos.reduce(\r\n      (contador, actual) => (contador += actual.cantidad),\r\n      0\r\n    );\r\n    return cantidad;\r\n  };\r\n\r\n  // Cuando los pedidos del cliente terminen de cargar, armamos las filas usando los datos\r\n  let filas = [];\r\n  if (cargandoPedidos === false) {\r\n    console.log(\"PEDIDOS CARGADOS\");\r\n    filas = pedidos.map((pedido) => {\r\n      return {\r\n        fecha: pedido.fecha,\r\n        cantidad_platos: cantidadPlatos(pedido),\r\n        total: `S/ ${pedido.monto_a_pagar}`,\r\n        entrega: pedido.estado.replace(/\\w/, c => c.toUpperCase()),\r\n        estado:\r\n          pedido.monto_a_pagar === pedido.monto_pagado\r\n            ? \"Pago completo\"\r\n            : `Debe S/ ${pedido.monto_a_pagar - pedido.monto_pagado}`,\r\n        ver_detalle: (\r\n          <button\r\n            className=\"btn btn-table-brown\"\r\n            onClick={() => {\r\n              setActivarModalVerPedidos(false);\r\n              setIdPedidoDetalle(pedido.id);\r\n              setActivarModalDetallePedido(true);\r\n            }}\r\n          >\r\n            Ver detalle\r\n          </button>\r\n        ),\r\n      };\r\n    });\r\n\r\n    console.log(\"Filas: \", filas);\r\n    dataTable = {\r\n      ...dataTable,\r\n      rows: filas,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={activarModalVerPedidos}\r\n      onHide={() => {\r\n        setActivarModalVerPedidos(false);\r\n      }}\r\n      keyboard={false}\r\n      centered\r\n      size=\"lg\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Pedidos del cliente</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <div className=\"ms-4 me-4 mt-2\">\r\n          {cargandoCliente ? (\r\n            <div className=\"text-center\">\r\n              <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"info-cliente mb-5\">\r\n              <p>\r\n                Cliente:{\" \"}\r\n                <span className=\"ms-1 fs-5\" style={{ fontWeight: \"500\" }}>\r\n                  {cliente?.nombre + \" \" + cliente?.apellido}\r\n                </span>{\" \"}\r\n              </p>\r\n              <p>\r\n                Celular:{\" \"}\r\n                <span className=\"ms-1 fs-5\" style={{ fontWeight: \"400\" }}>\r\n                  {cliente?.celular?.length > 0\r\n                    ? cliente.celular\r\n                    : \"----------\"}\r\n                </span>{\" \"}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          <hr />\r\n\r\n          {cargandoPedidos ? (\r\n            <div className=\"text-center\">\r\n              <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p className=\"fs-6\" style={{ fontWeight: \"500\" }}>\r\n                Lista de Pedidos\r\n              </p>\r\n              <MDBDataTableV5\r\n                searching={false}\r\n                sortable={false}\r\n                info={false}\r\n                paging={false}\r\n                data={dataTable}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <button\r\n          className=\"btn btn-table-secondary\"\r\n          onClick={() => setActivarModalVerPedidos(false)}\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalListaPedidosByCliente;\r\n","import React from \"react\";\r\nimport \"./deliveryStatus.css\";\r\nimport Swal from 'sweetalert2';\r\nimport { actualizarPedido } from \"../../services/pedidosService\";\r\n\r\nconst DeliveryStatus = ({idPedido, estado, setActualizarEstePedido, setActualizarPedidos, setCargandoActualizarPedido}) => {\r\n\r\n  \r\n\r\n console.log(\"estado: \", estado);\r\n\r\n  const actualizarEstadoDelivery = () => {\r\n      console.log(\"ACTUALIZAR PEDIDO\");\r\n    Swal.fire({\r\n        title: \"Desea actualizar el estado de la entrega\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n    }).then(rpta => {\r\n        if (rpta.isConfirmed){\r\n            setCargandoActualizarPedido(true);\r\n            actualizarPedido( idPedido, { estado: \"entregado\"}).then(rpta => {\r\n                if (rpta?.length > 0) {\r\n                    setCargandoActualizarPedido(false)\r\n                    setActualizarEstePedido(prevState =>  !prevState)\r\n                    setActualizarPedidos(prevState => !prevState)\r\n                    Swal.fire({\r\n                        title: \"Estado del pedido actualizado\",\r\n                        icon: \"success\",\r\n                        showCancelButton: false,\r\n                        timer: 800\r\n                    })\r\n                } else {\r\n                    Swal.fire({\r\n                        title: \"Oops...\",\r\n                        text: \"Error al editar el estado del pedido, intentelo más tarde\",\r\n                        icon: \"error\",\r\n                        showCancelButton: true,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"mb-4\">\r\n\r\n      <h4 className=\"text-center mb-4\">Estado de la entrega</h4>\r\n    <div className=\"d-flex justify-content-center\">\r\n      \r\n      <div className=\"item-status\"\r\n      >\r\n        <p className=\"item-status-icon status-icon--active mb-1\">\r\n          <i class=\"bx bx-sm bxs-basket\"></i>\r\n        </p>\r\n        <p className=\"status-caption status-caption--active\">Orden <br/> Generada</p>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"regla-status regla-status--active\"></div>\r\n\r\n      <div className=\"item-status\" \r\n      >\r\n        <p className=\"item-status-icon status-icon--active mb-1\">\r\n          <i class=\"bx bx-sm bxs-cart\"></i>\r\n        </p>\r\n\r\n        <p className=\"status-caption status-caption--active\">Pendiente</p>\r\n      </div>\r\n\r\n\r\n      <div className={estado === \"entregado\"? \"regla-status regla-status--active\": \"regla-status\"}></div>\r\n\r\n      <div className=\"item-status\"\r\n      onClick={estado !== \"entregado\" ? actualizarEstadoDelivery : undefined} \r\n      >\r\n        <p className={estado === \"entregado\"? \"item-status-icon status-icon--active mb-1\":\"item-status-icon pulse-button mb-1 shadow\"}>\r\n          <i class=\"bx bx-md bx-check\"></i>\r\n        </p>\r\n\r\n        <p className={estado === \"entregado\"? \"status-caption status-caption--active\" : \"status-caption\"}\r\n        >Entregado</p>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryStatus;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { actualizarPedido, getPedidoById } from \"../../services/pedidosService\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeliveryStatus from \"../deliveryStatus/DeliveryStatus\";\r\nimport './modalDetallePedido.css'\r\n\r\nconst ModalDetallePedido = ({\r\n  activarModalDetallePedido,\r\n  setActivarModalDetallePedido,\r\n  idPedidoDetalle,\r\n  setActualizarPedidos,\r\n}) => {\r\n  const [pedido, setPedido] = useState(null);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [cargandoActualizarPedido, setCargandoActualizarPedido] = useState(false);\r\n  const [mensajeError, setMensajeError] = useState(null);\r\n  const [actualizarEstePedido, setActualizarEstePedido] = useState(false);\r\n\r\n  console.log(\"CARGA INICIAL DETALLE PEDIDO\", cargando);\r\n  console.log(pedido);\r\n\r\n  useEffect(() => {\r\n    if (!idPedidoDetalle) return;\r\n    getPedidoById(idPedidoDetalle)\r\n      .then((data) => {\r\n        setPedido(data);\r\n        setCargando(false);\r\n        console.log(\"CARGA 2\", cargando);\r\n      })\r\n      .catch((error) => {\r\n        setMensajeError(\r\n          \"Error al ver el detalle del pedido, vuelva a intentar\"\r\n        );\r\n        setCargando(false);\r\n      });\r\n  }, [idPedidoDetalle, actualizarEstePedido]);\r\n\r\n  let filas = [];\r\n\r\n  let dataTable = {\r\n    columns: [\r\n      { label: \"Plato\", field: \"nombre\" },\r\n      { label: \"Categoria\", field: \"categoria\" },\r\n      { label: \"Cantidad\", field: \"cantidad_platos\" },\r\n      { label: \"Precio\", field: \"precio\" },\r\n      { label: \"Total\", field: \"total\" },\r\n    ],\r\n    rows: [\r\n      {\r\n        nombre: 1,\r\n        categoria: 2,\r\n        cantidad_platos: 3,\r\n        precio: 4,\r\n        total: 5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (!cargando) {\r\n    filas = pedido?.platos?.map((plato) => ({\r\n      nombre: plato?.plato_nombre,\r\n      categoria: plato?.categoria.nombre,\r\n      cantidad_platos: plato?.cantidad,\r\n      precio: `S/ ${plato?.plato_precio}`,\r\n      total: `S/ ${plato?.cantidad * plato?.plato_precio}`,\r\n    }));\r\n\r\n    // Luego le pasamos las nuevas filas a los datos de la tabla\r\n    dataTable = {\r\n      ...dataTable,\r\n      rows: filas,\r\n    };\r\n  }\r\n\r\n  const pagarPedido = (idPedido) => {\r\n    Swal.fire({\r\n      title: \"Desea confirmar el pago de este pedido\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        setCargandoActualizarPedido(true);\r\n        actualizarPedido(idPedido, { monto_pagado: pedido.monto_a_pagar }).then(\r\n          (rpta) => {\r\n            if (rpta?.length > 0) {\r\n              setActualizarPedidos((prevState) => !prevState);\r\n              Swal.fire({\r\n                title: \"Pedido pagado\",\r\n                icon: \"success\",\r\n                showCancelButton: false,\r\n                timer: 800,\r\n              });\r\n              setCargandoActualizarPedido(false);\r\n              setActualizarEstePedido((prevState) => !prevState);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={activarModalDetallePedido}\r\n      onHide={() => {\r\n        setActivarModalDetallePedido(false);\r\n      }}\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Detalle del pedido</Modal.Title>\r\n        <h5 className=\"me-5\">{pedido?.fecha}</h5>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <div style={{ position: \"relative\" }}>\r\n          {cargandoActualizarPedido ? (\r\n            <div className=\"spinner-wrapper d-flex justify-content-center align-items-center\">\r\n              \r\n              <div className=\"text-center\">\r\n                <div className=\"spinner-border text-secondary\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : cargando ? null : (\r\n            <div>\r\n              {/* STATUS DE LA ENTREGA */}\r\n              <DeliveryStatus\r\n              setCargandoActualizarPedido={setCargandoActualizarPedido}\r\n                idPedido={idPedidoDetalle}\r\n                estado={pedido?.estado}\r\n                setActualizarEstePedido={setActualizarEstePedido}\r\n                setActualizarPedidos={setActualizarPedidos}\r\n              />\r\n              {/* INFORMACION DEL CLIENTE */}\r\n              <div className=\"row ps-2 ms-2 me-5\">\r\n                <div className=\"col-8\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    Cliente:{\" \"}\r\n                    <p>\r\n                    <b>{`${pedido?.cliente.nombre} ${pedido?.cliente.apellido}`}</b>\r\n\r\n                    </p>\r\n                  </div>\r\n                  <p>\r\n                    Celular:{\" \"}\r\n                    {pedido?.cliente?.celular?.length > 0 ? (\r\n                      <b>{pedido?.cliente?.celular}</b>\r\n                    ) : (\r\n                      \" ---------\"\r\n                    )}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-4 text-end\">\r\n                  {pedido?.monto_pagado === pedido?.monto_a_pagar ? (\r\n                    <span className=\"badge-pedido pagado fs-5\">Pagado</span>\r\n                  ) : (\r\n                    <p>\r\n                      <button\r\n                        style={{ outline: \"none\", border: \"none\" }}\r\n                        className=\"badge-pedido debe fs-5 p-2 ps-3 pe-3 pulse-button-pagar\"\r\n                        onClick={() => pagarPedido(idPedidoDetalle)}\r\n                      >\r\n                        Pagar S/ {pedido?.monto_a_pagar - pedido?.monto_pagado}\r\n                      </button>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <hr className=\"m-4 me-5\" />\r\n          <div className=\"platos m-4 me-5\">\r\n            <p className=\"fs-5\" style={{ \"fontWeight\": \"500\" }}>\r\n              Platos\r\n            </p>\r\n            {mensajeError ? (\r\n              <div class=\"alert alert-warning\" role=\"alert\">\r\n                {mensajeError}\r\n              </div>\r\n            ) : cargando ? (\r\n              <div className=\"text-center\">\r\n                <div className=\"spinner-border text-secondary\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <MDBDataTableV5\r\n                searching={false}\r\n                sortable={false}\r\n                info={false}\r\n                paging={false}\r\n                data={dataTable}\r\n              />\r\n            )}\r\n            <hr />\r\n            <div className=\"col-12 text-end pe-2\">\r\n              <p className=\"mb-0\" style={{ \"font-weight\": \"500\" }}>\r\n                Total\r\n              </p>\r\n              <p className=\"fs-3\" style={{ \"font-weight\": \"500\" }}>\r\n                S/ {pedido?.monto_a_pagar}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <button\r\n          className=\"btn btn-dark\"\r\n          onClick={() => {\r\n            setPedido(null);\r\n            setCargando(true);\r\n            setActivarModalDetallePedido(false);\r\n            setCargandoActualizarPedido(false);\r\n            // setMensajeError(null);\r\n          }}\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalDetallePedido;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { actualizarPedido, getPedidoById } from \"../../services/pedidosService\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeliveryStatus from \"../deliveryStatus/DeliveryStatus\";\r\n\r\nconst ModalDetallePedidoDesdeCliente = ({\r\n  activarModalDetallePedido,\r\n  setActivarModalDetallePedido,\r\n  idPedidoDetalle,\r\n  setActualizadorClientes,\r\n  setActivarModalVerPedidos,\r\n  setActualizarPedidos\r\n}) => {\r\n  const [pedido, setPedido] = useState(null);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [cargandoActualizarPedido, setCargandoActualizarPedido] =\r\n    useState(false);\r\n  const [mensajeError, setMensajeError] = useState(null);\r\n  const [actualizarEstePedido, setActualizarEstePedido] = useState(false);\r\n\r\n  console.log(\"CARGA INICIAL DETALLE PEDIDO\", cargando);\r\n  console.log(\"PEDIDO: \", pedido);\r\n  console.log(\"ID PEDIDO: \", idPedidoDetalle);\r\n\r\n  useEffect(() => {\r\n    if (!idPedidoDetalle) return;\r\n    getPedidoById(idPedidoDetalle)\r\n      .then((data) => {\r\n        console.log(\"PEDIDO =========>\", data);\r\n        setPedido(data);\r\n        setCargando(false);\r\n        console.log(\"CARGA 2\", cargando);\r\n      })\r\n      .catch((error) => {\r\n        setMensajeError(\r\n          \"Error al ver el detalle del pedido, vuelva a intentar\"\r\n        );\r\n        setCargando(false);\r\n      });\r\n  }, [idPedidoDetalle, actualizarEstePedido]);\r\n\r\n  let filas = [];\r\n\r\n  let dataTable = {\r\n    columns: [\r\n      { label: \"Plato\", field: \"nombre\" },\r\n      { label: \"Categoria\", field: \"categoria\" },\r\n      { label: \"Cantidad\", field: \"cantidad_platos\" },\r\n      { label: \"Precio\", field: \"precio\" },\r\n      { label: \"Total\", field: \"total\" },\r\n    ],\r\n    rows: [\r\n      {\r\n        nombre: 1,\r\n        categoria: 2,\r\n        cantidad_platos: 3,\r\n        precio: 4,\r\n        total: 5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (!cargando) {\r\n    filas = pedido?.platos?.map((plato) => ({\r\n      nombre: plato?.plato_nombre,\r\n      categoria: plato?.categoria.nombre,\r\n      cantidad_platos: plato?.cantidad,\r\n      precio: `S/ ${plato?.plato_precio}`,\r\n      total: `S/ ${plato?.cantidad * plato?.plato_precio}`,\r\n    }));\r\n\r\n    // Luego le pasamos las nuevas filas a los datos de la tabla\r\n    dataTable = {\r\n      ...dataTable,\r\n      rows: filas,\r\n    };\r\n  }\r\n\r\n  const pagarPedido = (idPedido) => {\r\n    Swal.fire({\r\n      title: \"Desea confirmar el pago de este pedido\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        setCargandoActualizarPedido(true);\r\n        actualizarPedido(idPedido, { monto_pagado: pedido.monto_a_pagar }).then(\r\n          (rpta) => {\r\n            if (rpta?.length > 0) {\r\n              setActualizadorClientes((prevState) => !prevState);\r\n              Swal.fire({\r\n                title: \"Pedido pagado\",\r\n                icon: \"success\",\r\n                showCancelButton: false,\r\n                timer: 800,\r\n              });\r\n              setCargandoActualizarPedido(false);\r\n              setActualizarEstePedido((prevState) => !prevState);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={activarModalDetallePedido}\r\n      onHide={() => {\r\n        setActivarModalDetallePedido(false);\r\n      }}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Detalle del pedido</Modal.Title>\r\n        <h5 className=\"me-5\">{pedido?.fecha}</h5>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <div style={{ position: \"relative\" }}>\r\n          {cargandoActualizarPedido ? (\r\n            <div className=\"spinner-wrapper d-flex justify-content-center align-items-center\">\r\n              <div className=\"text-center\">\r\n                <div className=\"spinner-border text-secondary\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : cargando ? null : (\r\n            <div>\r\n              {/* STATUS DE LA ENTREGA */}\r\n              <DeliveryStatus\r\n                setCargandoActualizarPedido={setCargandoActualizarPedido}\r\n                idPedido={idPedidoDetalle}\r\n                estado={pedido?.estado}\r\n                setActualizarEstePedido={setActualizarEstePedido}\r\n                setActualizadorClientes={setActualizadorClientes}\r\n                setActualizarPedidos={setActualizarPedidos}\r\n              />\r\n              {/* INFORMACION DEL CLIENTE */}\r\n              <div className=\"row ps-2 ms-2 me-5\">\r\n                <div className=\"col-6\">\r\n                  <p>\r\n                    Cliente:{\" \"}\r\n                    <b>{`${pedido?.cliente.nombre} ${pedido?.cliente.apellido}`}</b>\r\n                  </p>\r\n                  <p>\r\n                    Celular:{\" \"}\r\n                    {pedido?.cliente?.celular?.length > 0 ? (\r\n                      <b>{pedido?.cliente?.celular}</b>\r\n                    ) : (\r\n                      \" ---------\"\r\n                    )}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-6 text-end\">\r\n                  {pedido?.monto_pagado === pedido?.monto_a_pagar ? (\r\n                    <span className=\"badge-pedido pagado fs-5\">Pagado</span>\r\n                  ) : (\r\n                    <p>\r\n                      <button\r\n                        style={{ outline: \"none\", border: \"none\" }}\r\n                        className=\"badge-pedido debe fs-5 p-2 ps-3 pe-3 pulse-button-pagar\"\r\n                        onClick={() => pagarPedido(idPedidoDetalle)}\r\n                      >\r\n                        Pagar S/ {pedido?.monto_a_pagar - pedido?.monto_pagado}\r\n                      </button>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <hr className=\"m-4 me-5\" />\r\n          <div className=\"platos m-4 me-5\">\r\n            <p className=\"fs-5\" style={{ fontWeight: \"500\" }}>\r\n              Platos\r\n            </p>\r\n            {mensajeError ? (\r\n              <div class=\"alert alert-warning\" role=\"alert\">\r\n                {mensajeError}\r\n              </div>\r\n            ) : cargando ? (\r\n              <div className=\"text-center\">\r\n                <div className=\"spinner-border text-secondary\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <MDBDataTableV5\r\n                searching={false}\r\n                sortable={false}\r\n                info={false}\r\n                paging={false}\r\n                data={dataTable}\r\n              />\r\n            )}\r\n            <hr />\r\n            <div className=\"col-12 text-end pe-2\">\r\n              <p className=\"mb-0\" style={{ fontWeight: \"500\" }}>\r\n                Total\r\n              </p>\r\n              <p className=\"fs-3\" style={{ fontWeight: \"500\" }}>\r\n                S/ {pedido?.monto_a_pagar}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <button\r\n          className=\"btn btn-table-secondary\"\r\n          onClick={() => {\r\n            setPedido(null);\r\n            setCargando(true);\r\n            setActivarModalDetallePedido(false);\r\n            setCargandoActualizarPedido(false);\r\n            setActivarModalVerPedidos(true);\r\n            // setMensajeError(null);\r\n          }}\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalDetallePedidoDesdeCliente;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PedidosContext from \"../../context/pedidos/pedidosContext\";\r\nimport \"./listaDeClientes.css\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport ModalEditarCliente from \"../modalEditarCliente/ModalEditarCliente\";\r\nimport ModalListaPedidosByCliente from \"../modalListaPedidosByCliente/ModalListaPedidosByCliente\";\r\nimport ModalDetallePedido from \"../modalDetallePedido/ModalDetallePedido\";\r\nimport ModalDetallePedidoDesdeCliente from \"../modalDetallePedidoDesdeCliente/ModalDetallePedidoDesdeCliente\";\r\nimport { useEffect } from \"react\";\r\nimport { actualizarPedido, getPedidos } from \"../../services/pedidosService\";\r\n\r\nconst ListaDeClientes = ({ clientes, cargando, setActualizadorClientes }) => {\r\n  // const { pedidos, cargando: pedidosCargando } = useContext(PedidosContext);\r\n\r\n  const [actualizarPedidos, setActualizarPedidos] = useState(false)\r\n  const [pedidos, setPedidos] = useState([]);\r\n  const [cargandoPedidos, setCargandoPedidos] = useState(true);\r\n  useEffect(() => {\r\n    setCargandoPedidos(true);\r\n    getPedidos().then(data => {\r\n      // console.log(\"PEDIDOS: \", data);\r\n      setPedidos(data);\r\n      setCargandoPedidos(false) \r\n    })\r\n  }, [actualizarPedidos])\r\n\r\n  // VARIABLES QUE USA EL MODAL EDITAR CLIENTE\r\n  const [idClienteEditar, setIdClienteEditar] = useState(null);\r\n  const [activarModalEditarCliente, setActivarModalEditarCliente] =\r\n    useState(false);\r\n  const [activarModalVerPedidos, setActivarModalVerPedidos] = useState(false)\r\n  const [idClientePedidos, setIdClientePedidos] = useState(null)\r\n  // ========================================\r\n\r\n  // VARIABLES QUE USA EL MODAL DETALLE PEDIDO\r\n  const [activarModalDetallePedido, setActivarModalDetallePedido] = useState(false)\r\n  const [idPedidoDetalle, setIdPedidoDetalle] = useState(null)\r\n  // =========================================\r\n\r\n  const pedidosXCliente = (idCliente, pedidos) => {\r\n    let pedidosCliente = pedidos?.filter(pedido =>  pedido.cliente.id === idCliente)\r\n    return pedidosCliente;\r\n  }\r\n\r\n  const deudaPorCliente = (idCliente, pedidos) => {\r\n    let pedidosCliente = pedidosXCliente(idCliente, pedidos);\r\n    // Calculamos la deuda\r\n    let deuda = pedidosCliente?.reduce((contador, pedido) => {\r\n      return (contador += (pedido.monto_a_pagar - pedido.monto_pagado));\r\n    }, 0);\r\n    // console.log(\"DEUDA: \", deuda);\r\n    return deuda;\r\n  };\r\n\r\n  let filas = [];\r\n\r\n  // Seteamos los datos iniciales de la tabla\r\n  let dataTable = {\r\n    columns: [\r\n      { label: \"Nombre\", field: \"cliente\" },\r\n      { label: \"Celular\", field: \"celular\" },\r\n      { label: \"Pedidos realizados\", field: \"numero_pedidos\" },\r\n      { label: \"Pago\", field: \"pago\" },\r\n      { label: \"Editar\", field: \"editar\" },\r\n      { label: \"Pedidos\", field: \"pedidos\" },\r\n    ],\r\n\r\n    rows: [\r\n      {\r\n        cliente: 1,\r\n        celular: 2,\r\n        numero_pedidos: 3,\r\n        pago: 4,\r\n        editar: 5,\r\n        pedidos: 6,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Cuando los clientes terminen de cargar, armamos las filas usando los datos\r\n  if (cargando === false && cargandoPedidos === false) {\r\n\r\n    filas = clientes.map((cliente) => {\r\n      let deudaCliente = deudaPorCliente(cliente.id, pedidos);\r\n      return {\r\n        cliente: cliente.nombre + \" \" + cliente.apellido,\r\n        celular: cliente.celular.length > 0? cliente.celular : \" --------- \",\r\n        numero_pedidos: pedidosXCliente(cliente.id, pedidos).length,\r\n        pago: deudaCliente > 0 ? `Debe S/ ${deudaCliente}`: \"Completo\",\r\n        editar: (\r\n          <button\r\n            className=\"btn btn-table-secondary\"\r\n            onClick={() => {\r\n              setIdClienteEditar(cliente.id)\r\n              setActivarModalEditarCliente(true);\r\n            }}\r\n          >\r\n            Editar\r\n          </button>\r\n        ),\r\n        pedidos: pedidosXCliente(cliente.id, pedidos).length > 0?\r\n        <button\r\n        onClick={() => {\r\n          setIdClientePedidos(cliente.id)\r\n          setActivarModalVerPedidos(true)\r\n        }}\r\n        className=\"btn btn-table-brown\"\r\n        >Pedidos</button>\r\n        : \r\n        <button\r\n        \r\n        className=\"btn btn-light fs-6\"\r\n        >Sin pedidos</button>\r\n        \r\n\r\n      };\r\n    });\r\n\r\n    // Luego le pasamos las nuevas filas a los datos de la tabla\r\n    dataTable = {\r\n      ...dataTable,\r\n      rows: filas,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* MODAL EDITAR CLIENTE */}\r\n      {activarModalEditarCliente && (\r\n        <ModalEditarCliente\r\n          activarModalEditarCliente={activarModalEditarCliente}\r\n          setActivarModalEditarCliente={setActivarModalEditarCliente}\r\n          idCliente={idClienteEditar}\r\n          setActualizadorClientes={setActualizadorClientes}\r\n        />\r\n      )}\r\n      {/* MODAL PARA VER PEDIDOS DE CADA CLIENTE */}\r\n      {activarModalVerPedidos  && \r\n      <ModalListaPedidosByCliente\r\n      setIdPedidoDetalle={setIdPedidoDetalle}\r\n      setActivarModalDetallePedido={setActivarModalDetallePedido}\r\n      idCliente={idClientePedidos}\r\n      activarModalVerPedidos={activarModalVerPedidos}\r\n      // ESTE MODAL TIENE MODAL TIENE LA OPCION DE ABRIR EL MODAL DETALLE DE UN PEDIDO\r\n      setActivarModalVerPedidos={setActivarModalVerPedidos}\r\n      /> \r\n      \r\n    }\r\n    {/* MODAL PARA VER EL DETALLE DE UN PEDIDO  */}\r\n    {\r\n      activarModalDetallePedido && \r\n      <ModalDetallePedidoDesdeCliente\r\n      setActualizarPedidos={setActualizarPedidos}\r\n      activarModalDetallePedido={activarModalDetallePedido}\r\n      setActivarModalDetallePedido={setActivarModalDetallePedido}\r\n      idPedidoDetalle={idPedidoDetalle}\r\n      setActualizarContenedor={setActualizadorClientes}\r\n      // ABRIR EL MODAL LISTA DE PEDIDOS, CUANDO ESTE MODAL SE CIERRE\r\n      setActivarModalVerPedidos={setActivarModalVerPedidos}\r\n      setActualizadorClientes={setActualizadorClientes}\r\n      />\r\n\r\n    }\r\n\r\n\r\n      <div className=\"lista-clientes mt-xxl-5 pt-xxl-5 mb-xxl-5 mt-4 mb-4 pt-xl-4 p-4 shadow\">\r\n        <div className=\"lista-clientes__header\">\r\n          <h2 className=\"subtitle\">Lista de clientes</h2>\r\n          {/* <p className=\"p-2\">Filtrar clientes</p> */}\r\n        </div>\r\n\r\n        <div className=\"lista-clientes__container p-4 p-xl-0\">\r\n          {cargando ? (\r\n            <div className=\"text-center\">\r\n              <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <MDBDataTableV5 data={dataTable} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaDeClientes;\r\n","import React from \"react\";\r\nimport \"./mostOrderedItem.css\";\r\nimport imgProduct from \"../../assets/images/frapuchino.png\";\r\n\r\nconst MostOrderedItem = ({ plato }) => {\r\n  return (\r\n    <li className=\"most-ordered-item\">\r\n      <div className=\"most-ordered__img\">\r\n        <img src={plato.imagen} alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <p className=\"most-ordered__name\">{plato.nombre}</p>\r\n        <p className=\"most-ordered__quantify\">{`${plato.cantidad_vendida} unidades vendidas`}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MostOrderedItem;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport PedidosContext from \"../../context/pedidos/pedidosContext\";\r\nimport { getPlatos } from \"../../services/platosService\";\r\nimport MostOrderedItem from \"../mostOrderedItem/MostOrderedItem\";\r\nimport \"./mostCommon.css\";\r\n\r\nconst MostCommonComponent = ({ title, pedidos }) => {\r\n\r\n  const [platos, setPlatos] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getPlatos().then((data) => {\r\n      setPlatos(data);\r\n      setCargando(false);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const platosMasVendidos = () => {\r\n    console.log(\"PEDIDOS: \", pedidos);\r\n\r\n    console.log(\"PLATOS: \", platos);\r\n\r\n    let platosYCantidades = {};\r\n    console.log(\"PLATOS Y CANTIDADES: \", platosYCantidades);\r\n\r\n    // Buscamos las cantidade vendidas de cada plato\r\n    pedidos.forEach((pedido) => {\r\n      pedido.platos.forEach((plato) => {\r\n        if (platosYCantidades.hasOwnProperty(plato.plato_id)) {\r\n          // Si el plato ya se encuentra, actualizamos su valor\r\n          platosYCantidades[plato.plato_id] =\r\n            platosYCantidades[plato.plato_id] + plato.cantidad;\r\n        } else {\r\n          // Si no encuentra, establecemos su valor inicial\r\n          platosYCantidades[plato.plato_id] = plato.cantidad;\r\n        }\r\n      });\r\n    });\r\n\r\n    // Fltramos los platos que tienen cantidades vendidas\r\n    let listaPlatosVendidos = platos.filter((plato) => platosYCantidades.hasOwnProperty(plato.id));\r\n\r\n    \r\n    //Armamos los objPlatos con sus respectivas cantidades vendidas\r\n    listaPlatosVendidos = listaPlatosVendidos\r\n    .map((plato) => ({\r\n      ...plato,\r\n      cantidad_vendida: platosYCantidades[plato.id],\r\n    }))\r\n    .sort((a, b) => b.cantidad_vendida - a.cantidad_vendida);\r\n    \r\n    return listaPlatosVendidos;\r\n  };\r\n\r\n  return (\r\n    <div className=\"most-common-component ms-xxl-3 ms-xl-0 mt-xl-0 p-2 pt-3 ps-4 mt-3 ms-md-3 shadow\">\r\n      <div className=\"most-common__header\">\r\n        <h4>{title}</h4>\r\n      </div>\r\n\r\n      <ul className=\"most-common__body p-0\">\r\n        {cargando ? (\r\n          <div className=\"text-center\">\r\n            <div class=\"spinner-border text-secondary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          pedidos.length > 0 &&\r\n          platos.length > 0 &&\r\n          platosMasVendidos().map((plato) => {\r\n            return <MostOrderedItem key={plato.id} plato={plato} />;\r\n          })\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MostCommonComponent;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport EstadisticasClientes from \"../components/estadisticasClientes/EstadisticasClientes\";\r\nimport EstadisticasComponent from \"../components/estadisticasComponent/EstadisticasComponent\";\r\nimport ListaDeClientes from \"../components/listaDeClientes/ListaDeClientes\";\r\nimport MostCommonComponent from \"../components/mostCommonComponent/MostCommonComponent\";\r\nimport { getClientes } from \"../services/clientesService\";\r\n\r\nconst ClientesScreen = () => {\r\n\r\n  const [clientes, setClientes] = useState([]);\r\n  const [cargando, setCargando] = useState(true)\r\n  const [actualizadorClientes, setActualizadorClientes] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // Obtenemos los clientes\r\n    getClientes().then(data => {\r\n      setClientes(data);\r\n      setCargando(false);\r\n    })\r\n  }, [actualizadorClientes])\r\n\r\n  return (\r\n    <section className=\"row p-xxl-4 pb-xxl-2 pt-xl-4 ps-xl-4 pb-xl-2 p-2 pt-3 m-0\">\r\n      <div className=\"col-xl-9 col-12\">\r\n        <h2 className=\"title\">Clientes</h2>\r\n\r\n        <div className=\"col-12 pt-xxl-4 pt-2\">\r\n          <EstadisticasClientes numClientes={clientes.length} cargando={cargando}/>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <ListaDeClientes clientes={clientes} cargando={cargando} setActualizadorClientes={setActualizadorClientes}/>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-xl-3 col-6 p-0\">\r\n        {/* <MostCommonComponent title=\"Clientes frecuentes\" /> */}\r\n      </div>\r\n    </section>\r\n   );\r\n};\r\n\r\nexport default ClientesScreen;\r\n","import React, { useState } from \"react\";\r\nimport \"./reportePedidos.css\";\r\nimport ModalDetallePedido from \"../modalDetallePedido/ModalDetallePedido\";\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport moment from 'moment'\r\n\r\nconst ReportePedidosComponent = ({ pedidos, cargando, setActualizarPedidos }) => {\r\n  const [activarModalDetallePedido, setActivarModalDetallePedido] =\r\n    useState(false);\r\n  const [idPedidoDetalle, setIdPedidoDetalle] = useState(null);\r\n\r\n  // let idPedidoDetalle = null;\r\n\r\n  const cantidadPlatos = (pedido) => {\r\n    let cantidad = pedido.platos.reduce((contador, plato) => {\r\n      return (contador += plato.cantidad);\r\n    }, 0);\r\n    return cantidad;\r\n  };\r\n\r\n  let filas = [];\r\n\r\n  // Seteamos los datos de la tabla con las filas vacias\r\n  let dataTable = {\r\n    columns: [\r\n      { label: \"Nombre\", field: \"cliente\" },\r\n      { label: \"Fecha\", field: \"fecha\" },\r\n      { label: \"Cantidad Platos\", field: \"cantidad_platos\" },\r\n      { label: \"Total\", field: \"total\" },\r\n      { label: \"Entrega\", field: \"entrega\" },\r\n      { label: \"Estado\", field: \"estado\" },\r\n      { label: \"Acciones\", field: \"acciones\" },\r\n    ],\r\n    rows: [\r\n      {\r\n        cliente: 1,\r\n        fecha: 2,\r\n        cantidad_platos: 3,\r\n        total: 4,\r\n        entrega: 5,\r\n        estado: 6,\r\n        acciones: <>Hola</>,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Cuando los pedidos terminen de cargar, armamos las filas que irán en la tabla usando los pedidos\r\n  if (cargando === false) {\r\n    // pedidos.sort((a, b) => moment(a.fecha).isAfter(b.fecha)? - 1: 1)\r\n    let pedidosOrdenados = pedidos.sort((a, b) => moment(a.fecha).isAfter(b.fecha) ?  -1 :  1);\r\n    console.log(\"Ordenado: \", pedidosOrdenados);\r\n\r\n    filas = pedidosOrdenados.map((pedido) => ({\r\n      cliente: `${pedido.cliente?.nombre} ${pedido.cliente?.apellido}`,\r\n      fecha: pedido.fecha,\r\n      cantidad_platos: cantidadPlatos(pedido),\r\n      total: \"S/ \" + pedido.monto_a_pagar,\r\n      entrega:pedido.estado === \"entregado\" ? \r\n         <span className={\"badge-pedido entregado\"}>Entregado</span>\r\n      : \r\n      <span className={\"badge-pedido pendiente\"}>Pendiente</span>\r\n        \r\n      \r\n  \r\n      ,\r\n      estado: pedido.monto_pagado === pedido.monto_a_pagar ? \r\n             <span className={\"badge-pedido pagado\"}>Pagado</span> \r\n             : \r\n              <span className={\"badge-pedido debe\"}>\r\n                {/* Debe S/ {`${pedido.monto_a_pagar - pedido.monto_pagado}`} */}\r\n                Debe\r\n              </span>\r\n              \r\n            \r\n      \r\n      ,\r\n      acciones: \r\n      (\r\n        <button\r\n          onClick={ () => {\r\n            setIdPedidoDetalle(pedido.id)\r\n            // idPedidoDetalle = pedido.id\r\n            setActivarModalDetallePedido(true)\r\n          }}\r\n          className=\"btn-ver-detalle\"\r\n        >\r\n          Ver pedido\r\n        </button>\r\n      ),\r\n    }));\r\n    // Luego le pasamos las nuevas filas a los datos de la tabla\r\n    dataTable = {\r\n      ...dataTable,\r\n      rows: filas,\r\n    };\r\n  }\r\n\r\n  console.log(idPedidoDetalle, \"Pedido detalle reporte Pedidos\");\r\n\r\n  return (\r\n    <div className=\"reporte-pedidos mt-xxl-5 pt-xxl-5 mb-xxl-5 mt-4 mb-4 pt-xl-4 p-4 shadow\">\r\n      <div className=\"reporte-pedidos__header\">\r\n        <h2 className=\"subtitle\">Reporte de pedidos</h2>\r\n\r\n        {/* <p className=\"p-2 p-xl-0\">Filtrar Orden</p> */}\r\n      </div>\r\n\r\n      <div className=\"reporte-pedidos__container p-4 p-xl-0\">\r\n        {/* MODAL DE DETALLE DEL PEDIDO */}\r\n        {\r\n          activarModalDetallePedido ?\r\n          <ModalDetallePedido\r\n            activarModalDetallePedido={activarModalDetallePedido}\r\n            setActivarModalDetallePedido={setActivarModalDetallePedido}\r\n            idPedidoDetalle={idPedidoDetalle}\r\n            setActualizarPedidos={setActualizarPedidos}\r\n          />\r\n          : \r\n          null\r\n        }\r\n        {/* ************************* */}\r\n        {cargando ? (\r\n          <div className=\"text-center\">\r\n            <div class=\"spinner-border text-secondary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table\">\r\n\r\n            <MDBDataTableV5 data={dataTable} hover maxHeight='500px'/>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportePedidosComponent;\r\n","import React, {useContext, useState, useEffect} from \"react\";\r\nimport ReportePedidosComponent from \"../components/reportePedidosComponent/ReportePedidosComponent\";\r\nimport EstadisticasComponent from \"../components/estadisticasComponent/EstadisticasComponent\";\r\nimport MostCommonComponent from \"../components/mostCommonComponent/MostCommonComponent\";\r\nimport PedidosState from \"../context/pedidos/pedidosState\";\r\nimport { getPedidos } from \"../services/pedidosService\";\r\n\r\nconst PedidosScreen = () => {\r\n\r\n  const [pedidos, setPedidos] = useState([])\r\n  const [cargando, setCargando] = useState(true)\r\n\r\n  const [actualizarPedidos, setActualizarPedidos] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCargando(true);\r\n    getPedidos().then(data => {\r\n      setPedidos(data);\r\n      setCargando(false)\r\n    })\r\n  }, [actualizarPedidos])\r\n\r\n\r\n  return (\r\n    \r\n\r\n    <section className=\"row p-xxl-4 pb-xxl-2 pt-xl-4 ps-xl-4 pb-xl-2 p-2 pt-3 m-0\">\r\n      <div className=\"col-xl-9 col-12\">\r\n\r\n        <h2 className=\"title\">Pedidos</h2>\r\n\r\n        <div className=\"col-12 pt-xxl-4 pt-2\">\r\n        <EstadisticasComponent cargando={cargando} pedidos={pedidos} />\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n        <ReportePedidosComponent pedidos={pedidos} cargando={cargando} setActualizarPedidos={setActualizarPedidos}/>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"col-xl-3 col-4 p-0\">\r\n        <MostCommonComponent title=\"Productos más vendidos\" pedidos={pedidos} cargando={cargando}/>\r\n      </div>\r\n    </section>\r\n    \r\n  );\r\n};\r\n\r\nexport default PedidosScreen;\r\n","import React, { useContext } from 'react'\r\nimport './productoComponent.css'\r\nimport productImg from '../../assets/images/frapuchino.png'\r\nimport PosContext from '../../context/pos/posContext'\r\n\r\nconst ProductoComponent = ({producto, accionName, accionFunction}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"producto-component shadow-sm\">\r\n            <div className=\"producto-img\">\r\n                <img src={producto?.imagen} alt=\"\" />\r\n            </div>\r\n            <div className=\"producto-body\">\r\n                <h3 className=\"producto-title mb-1 ps-1 pe-1\">\r\n                    {producto.nombre}\r\n                </h3>\r\n                <p className=\"producto-price mb-xxl-2 mb-1\">\r\n                    S/ {producto.precio}\r\n                </p>\r\n                {/* <div className=\"producto-size\">\r\n                    <p>Tamaño</p>\r\n                    <div className=\"size-options\">\r\n                        <p>S</p>\r\n                        <p>M</p>\r\n                        <p>L</p>\r\n                    </div>\r\n                </div> */}\r\n                <p className=\"producto-stock mb-xxl-3 mb-xl-2 mb-0\">\r\n                    {producto.stock} disponibles\r\n                </p>\r\n            </div>\r\n            <div className=\"producto-footer\">\r\n                <button \r\n                onClick={() => accionFunction(producto)}\r\n                className=\"agregarProducto-btn mt-1\">{accionName}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductoComponent\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"./productosComponent.css\";\r\nimport ProductoComponent from \"../productoComponent/ProductoComponent\";\r\nimport { getPlatos, getPlatosByCategoria } from \"../../services/platosService\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\n\r\nconst ProductosComponent = () => {\r\n  const { categoria_global, agregarProductoAlCarrito } = useContext(PosContext);\r\n  const [productos, setProductos] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setCargando(true);\r\n    if (categoria_global) {\r\n      console.log(\"categoria global\", categoria_global.id);\r\n      getPlatosByCategoria(categoria_global.id)\r\n        .then((data) => {\r\n          console.log(\"TRAYENDO PLATOS POR IDCATEGORIA\");\r\n          console.log(data);\r\n          setProductos(data);\r\n          setCargando(false);\r\n        })\r\n        .catch((err) => {\r\n          alert(\"ERROR AL TRAER LA INFORMACIÓN DE LOS PRODUCTOS DEL BACKEND\");\r\n          setCargando(false);\r\n        });\r\n    }\r\n  }, [categoria_global?.id]);\r\n\r\n  return (\r\n    <div className=\"productos-component\">\r\n      <div className=\"productos__header p-xxl-4 pb-xxl-2 pt-xl-4 ps-xl-3 pb-xl-2 pt-3 ps-2\">\r\n        <h2 className=\"subtitle p-0 m-0\">Productos</h2>\r\n\r\n        <p className=\"p-xxl-2 p-1 m-0\">{productos.length} productos</p>\r\n      </div>\r\n\r\n      {categoria_global !== null ? (\r\n        !cargando ? (\r\n          productos.length > 0 ? (\r\n            <div className=\"productos-container ps-xxl-4 pe-xxl-4 ps-xl-3 pe-xl-3 p-2\">\r\n              {productos.map((prod) => {\r\n                return (\r\n                  <ProductoComponent\r\n                    producto={prod}\r\n                    key={prod.id}\r\n                    accionName=\"Añadir\"\r\n                    accionFunction={agregarProductoAlCarrito}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <div class=\"alert alert-info fs-4 m-4\" role=\"alert\">\r\n              Sin platos en esta categoría\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div class=\"ms-4 spinner-border text-secondary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div class=\"alert alert-info fs-4 m-4\" role=\"alert\">\r\n          Selecciona una categoría\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductosComponent;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./itemCarrito.css\";\r\nimport itemPhoto from \"../../assets/images/frapuchino.png\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\n\r\nconst ItemCarrito = ({plato}) => {\r\n\r\n  const {eliminarProductoDelCarrito, editarCantidadDelProducto,actualizarMontoTotal } = useContext(PosContext);\r\n\r\n  const handleChangeCantidad = (e) => {\r\n    editarCantidadDelProducto(plato.plato_id, +e.target.value);\r\n    actualizarMontoTotal();\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"item-carrito\">\r\n      <div className=\"item-img\">\r\n        <img src={plato.imagen} alt=\"\" />\r\n      </div>\r\n      <div className=\"item-info\">\r\n        <div className=\"item-info__header\">\r\n        <p className=\"item-title\">{plato.plato_nombre}</p>\r\n        <button \r\n        onClick={() => {\r\n          eliminarProductoDelCarrito(plato.plato_id)\r\n        \r\n        } }\r\n        className=\"btn-delete\">\r\n        <i class='bx bx-x bx-sm' ></i>\r\n        </button>\r\n        </div>\r\n\r\n        <div className=\"item-details\">\r\n          <div>\r\n            <p>\r\n              x\r\n            </p>\r\n            {/* CANTIDAD PLATO */}\r\n            <input \r\n            min=\"1\"\r\n            onChange={handleChangeCantidad}\r\n            className=\"item-quantify\" type=\"number\" value={plato.cantidad}/>\r\n            {/* <button className=\"item-notes\">Notes</button> */}\r\n          </div>\r\n          {/* CANTIDAD PRECIO */}\r\n          <p className=\"item-price\">S/{plato.plato_precio}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemCarrito;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\nimport { postCliente } from \"../../services/clientesService\";\r\nimport \"./modalCrearCliente.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ModalCrearCliente = () => {\r\n  const { modalCrearCliente, setModalCrearCliente, setPuntoDeVentaState } =\r\n    useContext(PosContext);\r\n\r\n  const formVacio = {\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    celular: \"\",\r\n  };\r\n\r\n  const [formCliente, setFormCliente] = useState(formVacio);\r\n\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n\r\n  const [activarBtnCrearCliente, setActivarBtnCrearCliente] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    setMensajeError(\"\");\r\n    setFormCliente((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const crearCliente = (e) => {\r\n    e.preventDefault();\r\n    // Validar formularios\r\n    if (formCliente.nombre.trim().length < 3) {\r\n      setMensajeError(\"Escribe un nombre válido\");\r\n      return;\r\n    } else if (formCliente.apellido.trim().length < 3) {\r\n      setMensajeError(\"Escribe un apellido correcto\");\r\n      return;\r\n    }\r\n\r\n    // Bloqueamos el boton \"crear cliente\" para evitar crear duplicaciones\r\n    setActivarBtnCrearCliente(false);\r\n\r\n    // Creamos el cliente\r\n    postCliente(formCliente).then((data) => {\r\n      if (data.id) {\r\n        Swal.fire({\r\n          title: \"Cliente Creado\",\r\n          icon: \"success\",\r\n          timer: 900,\r\n        });\r\n        //Cerramos el modal\r\n        setModalCrearCliente(false);\r\n        // Una vez que el modal se cerró, habilitar el boton \"crear\" para la próxima creación\r\n        setActivarBtnCrearCliente(true);\r\n        // Si el cliente se creo, entonces setear el cliente global\r\n        setPuntoDeVentaState((prevState) => ({\r\n          ...prevState,\r\n          cliente_global: formCliente,\r\n        }));\r\n\r\n        // Reseteamos el formulario\r\n        setFormCliente(formVacio);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={modalCrearCliente}\r\n        onHide={() => {\r\n          setModalCrearCliente(false);\r\n        }}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Crear Cliente Nuevo</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <form className=\"ps-4 pe-4\" onSubmit={crearCliente}>\r\n            <div className=\"row mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label\">\r\n                Nombre\r\n              </label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"nombre\"\r\n                className=\"form-control\"\r\n                value={formCliente.nombre}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label\">\r\n                Apellido\r\n              </label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                id=\"name\"\r\n                className=\"form-control\"\r\n                name=\"apellido\"\r\n                value={formCliente.apellido}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"mb-5 row \">\r\n              <div className=\"col-7 p-0\">\r\n                <label htmlFor=\"name\" className=\"form-label ps-2\">\r\n                  Celular (Opcional)\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  className=\"form-control\"\r\n                  name=\"celular\"\r\n                  value={formCliente.celular}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            {mensajeError.length > 0 && (\r\n              <div class=\"alert alert-warning\" role=\"alert\">\r\n                {mensajeError}\r\n              </div>\r\n            )}\r\n            <hr />\r\n            <div className=\"mb-3 mt-4 d-flex justify-content-end gap-3\">\r\n              <button\r\n              class=\"btn btn-secondary\"\r\n                type=\"reset\"\r\n                onClick={() => {\r\n                  setModalCrearCliente(false);\r\n                  setFormCliente(formVacio);\r\n                  setMensajeError(\"\");\r\n                }}\r\n              >\r\n                Cerrar\r\n              </button>\r\n\r\n              <button class=\"btn btn-dark\" type={activarBtnCrearCliente ? \"submit\" : \"button\"}>\r\n                Crear Cliente\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCrearCliente;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\nimport { getClientes } from \"../../services/clientesService\";\r\nimport './clientesSearch.css'\r\n\r\nconst ClientesSearch = () => {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [sugerencias, setSugerencias] = useState([]);\r\n  const [clientes, setClientes] = useState([]);\r\n\r\n  const { establecerClienteGlobal } = useContext(PosContext);\r\n\r\n  useEffect(() => {\r\n    getClientes().then((data) => {\r\n      setClientes(data);\r\n    });\r\n  }, []);\r\n\r\n  // Funcion que setea el cliente global\r\n  const setClienteGlobal = (cliente) => {\r\n    establecerClienteGlobal(cliente)\r\n    setSearchWord(\"\")\r\n    setSugerencias([])\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    // BUSCADOR DEL CLIENTE: \r\n    // Busca coincidencias con la base de datos clientes conforme se va escribiendo el nombre\r\n    let result = [];\r\n    if (e.target.value.length > 0) {\r\n      let regex = new RegExp(`${e.target.value.trim()}`, \"i\");\r\n      result = clientes.sort().filter((cliente) => regex.test(cliente.nombre + \" \" + cliente.apellido));\r\n    }\r\n    setSugerencias(result);\r\n    setSearchWord(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cliente-search d-flex align-items-center w-100\">\r\n      <i class='bx bx-search-alt bx-sm pt-2 pe-1 ps-1'></i>\r\n      <input\r\n        className=\"input-cliente-search\"\r\n        type=\"text\"\r\n        value={searchWord}\r\n        onChange={handleChange}\r\n        placeholder=\"Buscar cliente\"\r\n      />\r\n      <ul className=\"lista-clientes-search shadow-sm\">\r\n        {searchWord.length > 0 ? (\r\n          sugerencias.length > 0 ? (\r\n            sugerencias.map((cliente, i) => {\r\n              return (\r\n                <li\r\n                 className=\"cliente-search-item p-2 ps-3\"\r\n                 onClick={() => setClienteGlobal(cliente)} key={i}>\r\n                  {`${cliente.nombre} ${cliente.apellido}`}\r\n                </li>\r\n              );\r\n            })\r\n          ) : (\r\n            <p className=\"alert alert-info\">No hay clientes con ese nombre</p>\r\n          )\r\n        ) : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientesSearch;\r\n","import React from \"react\";\r\nimport \"./perfilClienteCarrito.css\";\r\n\r\nconst PerfilClienteCarrito = ({\r\n  cliente_global,\r\n  deseleccionarClienteGlobal,\r\n}) => {\r\n  return (\r\n    <div className=\"perfilCliente d-flex justify-content-between align-items-center shadow p-2 rounded-pill mb-3\">\r\n      <div className=\"d-flex justify-content-start align-items-center\">\r\n        <i class=\"icon-cliente bx bxs-user-circle bx-md me-1\"></i>\r\n        <p className=\"perfilCliente-name\">{cliente_global.nombre} {cliente_global.apellido}</p>\r\n      </div>\r\n\r\n      <button \r\n       className=\"btn-delete-perfil-cliente\"\r\n       onClick={deseleccionarClienteGlobal}>\r\n      <i class='bx bx-x'></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerfilClienteCarrito;\r\n","import React from 'react'\r\nimport './buttonAgregarCliente.css'\r\n\r\nconst ButtonAgregarCliente = ({ setModalCrearCliente }) => {\r\n\r\n    return (\r\n        <>\r\n          {/* <p className=\"tooltip-crear-cliente p-2 fs-6\" >Crear cliente nuevo</p> */}\r\n          <button\r\n          variant=\"success\"\r\n            className=\"d-flex align-items-center justify-content-center btn-crear-cliente\"\r\n            onClick={() => setModalCrearCliente(true)}\r\n          >\r\n            <i class='bx bx-plus-circle bx-md'></i>\r\n          </button>\r\n          </>\r\n    )\r\n}\r\n\r\nexport default ButtonAgregarCliente\r\n","import React, { useContext } from \"react\";\r\nimport ClientesSearch from \"../clientesSearch/ClientesSearch\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\nimport PerfilClienteCarrito from \"../perfilClienteCarrito/PerfilClienteCarrito\";\r\nimport './carritoCliente.css'\r\nimport ButtonAgregarCliente from \"../buttonAgregarCliente/ButtonAgregarCliente\";\r\n\r\nconst CarritoCliente = () => {\r\n\r\n  \r\n\r\n  const { setModalCrearCliente, cliente_global, eliminarClienteGlobal } =\r\n    useContext(PosContext);\r\n\r\n  const deseleccionarClienteGlobal = () => {\r\n    eliminarClienteGlobal()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cliente_global ? (\r\n        <PerfilClienteCarrito\r\n          cliente_global={cliente_global}\r\n          deseleccionarClienteGlobal={deseleccionarClienteGlobal}\r\n        />\r\n      ) : (\r\n        <div className=\"carrito-cliente d-flex justify-content-between align-items-center shadow p-1 rounded-pill mb-3\">\r\n          <ClientesSearch />\r\n          \r\n          \r\n          <ButtonAgregarCliente setModalCrearCliente={setModalCrearCliente} />\r\n\r\n          {/* <button\r\n          variant=\"success\"\r\n            className=\"d-flex align-items-center justify-content-center btn-crear-cliente\"\r\n            onClick={() => setModalCrearCliente(true)}\r\n          >\r\n            <i class='bx bx-plus-circle bx-md'></i>\r\n          </button> */}\r\n\r\n\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarritoCliente;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./carritoComponent.css\";\r\nimport ItemCarrito from \"../itemCarrito/ItemCarrito\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\nimport ModalCrearCliente from \"../modalCrearCliente/ModalCrearCliente\";\r\nimport CarritoCliente from \"../carritoCliente/CarritoCliente\";\r\n\r\nconst CarritoComponent = ({ setConfirmarPedido }) => {\r\n  const { carrito, monto_total, cliente_global } = useContext(PosContext);\r\n\r\n  return (\r\n    <>\r\n      <ModalCrearCliente />\r\n      {/* =================== */}\r\n      <div className=\"carrito-component ps-xxl-5 pe-xxl-5 pt-xxl-5 ps-xl-4 pe-xl-4 pt-xl-3 p-3 pb-0 shadow-sm\">\r\n        <div className=\"carrito-header pb-xxl-0 pb-xl-0\">\r\n          <h2 className=\"carrito-title mb-xxl-3 mb-xl-2\">Pedido</h2>\r\n\r\n          <CarritoCliente/>\r\n\r\n          <div className=\"carrito-info mb-0 p-0\">\r\n            <p className=\"mb-xxl-1 mb-xl-0\">Item</p>\r\n            <p className=\"mb-xxl-1 mb-xl-0\">Precio</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"carrito-body\">\r\n          {carrito.length > 0 ? (\r\n            carrito.map((plato) => <ItemCarrito plato={plato} />)\r\n          ) : (\r\n            <p className=\"mt-4 fs-4\" style={{\"color\": \"text-primary-light\"}}>Carrito vacio</p>\r\n          )}\r\n        </div>\r\n        <div className=\"carrito-footer pb-4\">\r\n          <div className=\"carrito-total pt-xxl-3 pt-xl-2 mb-2\">\r\n            <p className=\"mb-1\">Total</p>\r\n            <p className=\"total-price mb-0\">S/ {monto_total}</p>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() =>\r\n              carrito.length > 0 && cliente_global !== null\r\n                ? setConfirmarPedido(true)\r\n                : null\r\n            }\r\n            className={\r\n              carrito.length > 0 && cliente_global !== null\r\n                ? \"btn-continuar-orden\"\r\n                : \"btn-continuar-orden btn-continuar-orden--disactived\"\r\n            }\r\n          >\r\n            Continuar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarritoComponent;\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../context/pos/posContext';\r\nimport './categoriaComponent.css'\r\n\r\n\r\nconst CategoriaComponent = ({ categoria }) => {\r\n\r\n    \r\n  const {establecerCategoriaGlobal, categoria_global} = useContext(PosContext);\r\n  \r\n\r\n    return (\r\n        <div  className={categoria_global?.id === categoria.id? \"categoria-component categoria-activate\" : \"categoria-component\" }\r\n        onClick={() => establecerCategoriaGlobal(categoria)}\r\n        >\r\n            <i class='bx bx-md bxs-dish'></i>\r\n            <p>{categoria.nombre}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriaComponent\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\nimport { getCategorias } from \"../../services/categoriaService\";\r\nimport CategoriaComponent from \"../categoriaComponent/CategoriaComponent\";\r\nimport \"./categoriasComponent.css\";\r\n\r\nconst CategoriasComponent = () => {\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setCargando(true);\r\n    getCategorias().then((data) => {\r\n      setCategorias(data);\r\n      setCargando(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row p-xxl-4 pb-xxl-2 pt-xl-4 pb-xl-2 ps-xl-3 pt-3 ps-2\">\r\n          <div className=\"col-xxl-5 col-7\">\r\n            <h2 className=\"subtitle\">Elige la categoría</h2>\r\n          </div>\r\n          <div className=\"col-xxl-6 col-5 \">\r\n            {/* SEARCH PLATO */}\r\n            {/* <form className=\"p-2\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Busca un plato\"\r\n              />\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-12\">\r\n        {cargando ? (\r\n          <div class=\"ms-xxl-4 ms-xl-3 spinner-border text-secondary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"categorias-container\">\r\n            {categorias.map((cat) => {\r\n              return <CategoriaComponent categoria={cat} key={cat.id} />;\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriasComponent;\r\n","import React, { useState, useContext } from \"react\";\r\nimport PosContext from \"../../context/pos/posContext\";\r\nimport ItemCarrito from \"../itemCarrito/ItemCarrito\";\r\nimport \"./confirmarOrdenComponent.css\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst ConfirmarOrdenComponent = ({ setConfirmarPedido }) => {\r\n\r\n  const { carrito, monto_total, monto_pagado, establecerEstadoDelPedido, establecerMontoPagado, estado, crearPedido } =\r\n    useContext(PosContext);\r\n  const [montoACuenta, setMontoACuenta] = useState(0);\r\n\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"estado\":\r\n        establecerEstadoDelPedido(e.target.value)\r\n        \r\n        break;\r\n      case \"monto_pagado\":\r\n        if (e.target.value < 0 || e.target.value > monto_total) return;\r\n        setMontoACuenta(e.target.value);\r\n        establecerMontoPagado(e.target.value)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"confirmarOrden p-xxl-5 p-xl-4 pt-xl-3 p-3 shadow-sm\">\r\n      <div className=\"confirmarOrden-header mb-0 p-0\">\r\n        <h2 className=\"confirmarOrden-title\">Confirmar Órden</h2>\r\n      </div>\r\n\r\n      <div className=\"confirmarOrden-body ps-0 pe-2\">\r\n        <ul className=\"p-0 ms-0\">\r\n          {carrito.map((plato) => {\r\n            return (\r\n              <li >\r\n                <ItemCarrito plato={plato} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"confirmarOrden-footer pb-xxl-5 pb-xl-2 ps-xxl-5 ps-xl-4 pe-xxl-5 pe-xl-4 p-3 shadow\">\r\n        <div className=\"confirmarOrden-status pt-xxl-2 pt-xl-1\">\r\n          <p className=\"confirmarOrden-subtitle mb-xxl-3 mb-xl-2\">Estado de Pedido</p>\r\n          <div>\r\n            <button\r\n              onClick={handleChange}\r\n              name=\"estado\"\r\n              value=\"pendiente\"\r\n              className={estado === \"pendiente\" && \"active-state\"}\r\n            >\r\n              Pendiente\r\n            </button>\r\n            <button\r\n              onClick={handleChange}\r\n              name=\"estado\"\r\n              value=\"entregado\"\r\n              className={estado !== \"pendiente\" && \"active-state\"}\r\n            >\r\n              Entregado\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"confirmarOrden-pago pt-0 mb-3\">\r\n          <div className=\"confirmarOrden-precio\">\r\n            <p className=\"confirmarOrden-subtitle mb-0 \">Total</p>\r\n            <p className=\"total-price mb-0  confirmarOrden-subtitle\">\r\n              S/ {monto_total}\r\n            </p>\r\n          </div>\r\n\r\n          <p className=\"confirmarOrden-subtitle text-center mb-xxl-3 mb-xl-2\">Pagar</p>\r\n          <div className=\"confirmarOrden-pagar\">\r\n            <button\r\n              onClick={handleChange}\r\n              name=\"monto_pagado\"\r\n              value={monto_total}\r\n              className={\r\n                monto_pagado === monto_total\r\n                  ? \"btn-pagar btn-pagar-active\"\r\n                  : \"btn-pagar\"\r\n              }\r\n            >\r\n              <i class=\"bx bx-md bx-money\"></i>\r\n              Completo\r\n            </button>\r\n\r\n            <input\r\n              onChange={handleChange}\r\n              name=\"monto_pagado\"\r\n              className={\r\n                montoACuenta > 0\r\n                  ? \"btn-pagar btn-pagar-active text-center inputACuenta\"\r\n                  : \"btn-pagar text-center inputACuenta\"\r\n              }\r\n              type=\"number\"\r\n              placeholder=\"S/\"\r\n              value={montoACuenta}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"confirmarOrden-btns-container\">\r\n          <button\r\n            onClick={() => setConfirmarPedido(false)}\r\n            className=\"confirmarOrden-btn\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n\r\n          <button \r\n          onClick={crearPedido}\r\n          className=\"confirmarOrden-btn\">Confirmar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmarOrdenComponent;\r\n","import React, {useState, useContext} from 'react'\r\nimport ProductosComponent from '../components/productosComponent/ProductosComponent'\r\nimport CarritoComponent from '../components/carritoComponent/CarritoComponent'\r\nimport CategoriasComponent from '../components/categoriasComponent/CategoriasComponent'\r\nimport ConfirmarOrdenComponent from '../components/confirmarOrdenComponent/ConfirmarOrdenComponent'\r\nimport PosContext from '../context/pos/posContext'\r\n\r\nconst PuntoDeVentaScreen = () => {\r\n\r\n    const {carrito, cliente_global} = useContext(PosContext)\r\n    const [confirmarPedido, setConfirmarPedido] = useState(false)\r\n\r\n    return (\r\n        <section className=\"row m-0\">\r\n            <div className=\"col-8 pb-5\">\r\n                <CategoriasComponent/>\r\n\r\n                <ProductosComponent />\r\n            </div>\r\n\r\n            <div className=\"col-4 m-0\" style={{position: \"relative\"}}>\r\n\r\n                {\r\n                    confirmarPedido && carrito.length > 0 && cliente_global !== null ? \r\n                    <ConfirmarOrdenComponent setConfirmarPedido={setConfirmarPedido}/>\r\n                    :\r\n                    <CarritoComponent setConfirmarPedido={setConfirmarPedido} />\r\n\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PuntoDeVentaScreen\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport MenuComponent from \"../../components/menuComponent/MenuComponent\";\r\nimport PedidosState from \"../../context/pedidos/pedidosState\";\r\nimport PosState from \"../../context/pos/posState\";\r\nimport AdministrarScreen from \"../../screens/AdministrarScreen\";\r\nimport ClientesScreen from \"../../screens/ClientesScreen\";\r\n// import PagosScreen from \"../../screens/PagosScreen\";\r\nimport PedidosScreen from \"../../screens/PedidosScreen\";\r\nimport PuntoDeVentaScreen from \"../../screens/PuntoDeVentaScreen\";\r\n\r\nconst AdminRouter = () => {\r\n  return (\r\n    <>\r\n      <MenuComponent />\r\n      <div style={{ marginLeft: \"var(--width-sidebar)\" }}>\r\n        <PosState>\r\n          <PedidosState>\r\n            <Switch>\r\n              <Route exact path=\"/vender\" component={PuntoDeVentaScreen} />\r\n              <Route path=\"/pedidos\" component={PedidosScreen} />\r\n              {/* <Route path=\"/pagos\" component={PagosScreen} /> */}\r\n              <Route path=\"/clientes\" component={ClientesScreen} />\r\n              <Route path=\"/administrar\" component={AdministrarScreen} />\r\n            </Switch>\r\n          </PedidosState>\r\n        </PosState>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRouter;\r\n","import React, {useContext} from 'react'\r\nimport { Route, Redirect} from 'react-router-dom'\r\nimport AuthContext from './context/auth/authContext';\r\n\r\nconst Private = ({ path, component:Component }) => {\r\n\r\n    const {isAuthenticated, cargando} = useContext(AuthContext);\r\n    console.log(\"Autenticado ========\");\r\n    console.log(isAuthenticated);\r\n    console.log(\"Cargando\");\r\n    console.log(cargando);\r\n\r\n    return (\r\n        cargando? \r\n        <h2>Cargando...</h2>\r\n        : \r\n        isAuthenticated ?\r\n        <Route path={path} component={Component}/>\r\n        : \r\n        <Redirect to=\"/login\" />\r\n    )\r\n}\r\n\r\nexport default Private\r\n","import React, { useContext, useState } from \"react\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport { auth } from \"../firebase/firebase\";\r\n\r\nconst LoginScreen = (props) => {\r\n  const { iniciarSesionContext } = useContext(AuthContext);\r\n\r\n  const formVacio = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [form, setForm] = useState(formVacio);\r\n  const [cargando, setCargando] = useState(false);\r\n  const [mensajeError, setMensajeError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setMensajeError(null);\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCargando(true);\r\n    auth\r\n      .signInWithEmailAndPassword(form.email, form.password)\r\n      .then((rpta) => {\r\n        if (rpta.user) {\r\n          setCargando(false);\r\n          // Login exitoso\r\n          console.log(\"Login exitoso\");\r\n          console.log(rpta.user);\r\n          iniciarSesionContext(rpta.user);\r\n          props.history.push(\"/vender\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        if (error.code === \"auth/wrong-password\") {\r\n          setMensajeError(\"La contraseña es inválida o el usuario no existe\");\r\n          setCargando(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row gap-0 login-screen-container\">\r\n      <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n        <div className=\"form-login-container\">\r\n          <h2 className=\"mb-xxl-5 mb-xl-4\">Login</h2>\r\n          {mensajeError && (\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n              {mensajeError}\r\n            </div>\r\n          )}\r\n          <form className=\"\" onSubmit={handleSubmit}>\r\n            {cargando ? (\r\n              <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"inputEmail\" className=\"form-label fs-6\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    id=\"inputEmail\"\r\n                    className=\"form-control form-control-sm rounded-pill p-2 ps-3\"\r\n                    type=\"email\"\r\n                    placeholder=\"Correo electrónico\"\r\n                    value={form.email}\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-xxl-5 mb-xl-4\">\r\n                  <label htmlFor=\"inputPassword\" className=\"form-label fs-6\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    id=\"inputPassword\"\r\n                    className=\"form-control form-control-sm rounded-pill p-2 ps-3\"\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    value={form.password}\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                  />\r\n                </div>\r\n                <div className=\"d-grid\">\r\n                  <button\r\n                    className=\"btn btn-primary fs-5 rounded-pill p-2\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Ingresar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-6 bg-login-container\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from 'react'\nimport { HashRouter, Switch, Route} from 'react-router-dom'\nimport AuthState from './context/auth/authState'\nimport AdminRouter from './modules/Admin/AdminRouter'\nimport Private from './Private'\nimport LoginScreen from './screens/LoginScreen'\n\n\n\nconst App = () => {\n  return (\n    \n    <HashRouter>\n    <AuthState>\n      <Switch>\n\n        <Route path=\"/login\" component={LoginScreen} />\n        <Private path=\"/\" component={AdminRouter} />\n        \n\n      </Switch>\n      </AuthState>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}